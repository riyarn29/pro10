{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/abc/abc.component.css","webpack:///./src/app/abc/abc.component.html","webpack:///./src/app/abc/abc.component.ts","webpack:///./src/app/abc/abclist.component.css","webpack:///./src/app/abc/abclist.component.html","webpack:///./src/app/abc/abclist.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/asset/asset.component.css","webpack:///./src/app/asset/asset.component.html","webpack:///./src/app/asset/asset.component.ts","webpack:///./src/app/asset/assetlist.component.css","webpack:///./src/app/asset/assetlist.component.html","webpack:///./src/app/asset/assetlist.component.ts","webpack:///./src/app/auth-service.service.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/client/client.component.css","webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/client/clientlist.component.css","webpack:///./src/app/client/clientlist.component.html","webpack:///./src/app/client/clientlist.component.ts","webpack:///./src/app/college/college-list.component.html","webpack:///./src/app/college/college-list.component.ts","webpack:///./src/app/college/college.component.css","webpack:///./src/app/college/college.component.html","webpack:///./src/app/college/college.component.ts","webpack:///./src/app/computer/computer.component.css","webpack:///./src/app/computer/computer.component.html","webpack:///./src/app/computer/computer.component.ts","webpack:///./src/app/computer/computerlist.component.css","webpack:///./src/app/computer/computerlist.component.html","webpack:///./src/app/computer/computerlist.component.ts","webpack:///./src/app/course/course-list.component.html","webpack:///./src/app/course/course-list.component.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customerlist.component.css","webpack:///./src/app/customer/customerlist.component.html","webpack:///./src/app/customer/customerlist.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/department/department.component.css","webpack:///./src/app/department/department.component.html","webpack:///./src/app/department/department.component.ts","webpack:///./src/app/department/departmentlist.component.css","webpack:///./src/app/department/departmentlist.component.html","webpack:///./src/app/department/departmentlist.component.ts","webpack:///./src/app/endpoint-service.service.ts","webpack:///./src/app/faculty/faculty-list.component.html","webpack:///./src/app/faculty/faculty-list.component.ts","webpack:///./src/app/faculty/faculty.component.css","webpack:///./src/app/faculty/faculty.component.html","webpack:///./src/app/faculty/faculty.component.ts","webpack:///./src/app/file/file.component.css","webpack:///./src/app/file/file.component.html","webpack:///./src/app/file/file.component.ts","webpack:///./src/app/followup/followup.component.css","webpack:///./src/app/followup/followup.component.html","webpack:///./src/app/followup/followup.component.ts","webpack:///./src/app/followup/followuplist.component.css","webpack:///./src/app/followup/followuplist.component.html","webpack:///./src/app/followup/followuplist.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/login/forgotpassword.component.html","webpack:///./src/app/login/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/signup.component.html","webpack:///./src/app/login/signup.component.ts","webpack:///./src/app/marksheet/getmarksheet.component.html","webpack:///./src/app/marksheet/getmarksheet.component.ts","webpack:///./src/app/marksheet/marksheet-list.component.html","webpack:///./src/app/marksheet/marksheet-list.component.ts","webpack:///./src/app/marksheet/marksheet.component.css","webpack:///./src/app/marksheet/marksheet.component.html","webpack:///./src/app/marksheet/marksheet.component.ts","webpack:///./src/app/marksheet/marksheetmerit-list.component.html","webpack:///./src/app/marksheet/marksheetmerit-list.component.ts","webpack:///./src/app/message/message-list.component.html","webpack:///./src/app/message/message-list.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/portfolio/portfolio.component.css","webpack:///./src/app/portfolio/portfolio.component.html","webpack:///./src/app/portfolio/portfolio.component.ts","webpack:///./src/app/portfolio/portfoliolist.component.css","webpack:///./src/app/portfolio/portfoliolist.component.html","webpack:///./src/app/portfolio/portfoliolist.component.ts","webpack:///./src/app/region/region.component.css","webpack:///./src/app/region/region.component.html","webpack:///./src/app/region/region.component.ts","webpack:///./src/app/region/regionlist.component.css","webpack:///./src/app/region/regionlist.component.html","webpack:///./src/app/region/regionlist.component.ts","webpack:///./src/app/role/role-list.component.html","webpack:///./src/app/role/role-list.component.ts","webpack:///./src/app/role/role.component.css","webpack:///./src/app/role/role.component.html","webpack:///./src/app/role/role.component.ts","webpack:///./src/app/service-locator.service.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/stockanalysis/stockanalysis.component.css","webpack:///./src/app/stockanalysis/stockanalysis.component.html","webpack:///./src/app/stockanalysis/stockanalysis.component.ts","webpack:///./src/app/stockanalysis/stockanalysislist.component.css","webpack:///./src/app/stockanalysis/stockanalysislist.component.html","webpack:///./src/app/stockanalysis/stockanalysislist.component.ts","webpack:///./src/app/student/student-list.component.html","webpack:///./src/app/student/student-list.component.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/subject/subject-list.component.html","webpack:///./src/app/subject/subject-list.component.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/timetable/timetable-list.component.html","webpack:///./src/app/timetable/timetable-list.component.ts","webpack:///./src/app/timetable/timetable.component.css","webpack:///./src/app/timetable/timetable.component.html","webpack:///./src/app/timetable/timetable.component.ts","webpack:///./src/app/user/changepassword.component.html","webpack:///./src/app/user/changepassword.component.ts","webpack:///./src/app/user/myprofile.component.html","webpack:///./src/app/user/myprofile.component.ts","webpack:///./src/app/user/user-list.component.html","webpack:///./src/app/user/user-list.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/utility/data-validator.ts","webpack:///./src/app/xyz/xyz.component.css","webpack:///./src/app/xyz/xyz.component.html","webpack:///./src/app/xyz/xyz.component.ts","webpack:///./src/app/xyz/xyzlist.component.css","webpack:///./src/app/xyz/xyzlist.component.html","webpack:///./src/app/xyz/xyzlist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FiYy9hYmMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"abcForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add ABC' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update ABC' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <!-- Name Field with Validation -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Overview' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"overview\\\" [(ngModel)]=\\\"form.data.overview\\\" class=\\\"form-control\\\" maxlength=\\\"101\\\"\\r\\n                  (keydown)=\\\"validateOverview($event)\\\" placeholder=\\\"{{ 'Enter overview' | translate }}\\\" required></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageOverview\\\" class=\\\"alertRedColor\\\">{{ errorMessageOverview }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.overview\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.overview }}</span>\\r\\n            </div>\\r\\n            \\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Coverage Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"coverageAmount\\\" [(ngModel)]=\\\"form.data.coverageAmount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"validateIntegerInput($event)\\\" maxlength=\\\"9\\\"\\r\\n                  placeholder=\\\"{{ 'Enter coverageAmount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMsgInt\\\" class=\\\"alertRedColor\\\">{{ errorMsgInt }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.coverageAmount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.coverageAmount }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Quantity' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageQuantity', 8, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter quantity' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageQuantity\\\" class=\\\"alertRedColor\\\">{{ errorMessageQuantity }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.quantity\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.quantity }}</span>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ ' Latitude' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"latitude\\\" [(ngModel)]=\\\"form.data.latitude\\\" class=\\\"form-control\\\" maxlength=\\\"11\\\"\\r\\n                  placeholder=\\\"{{ 'Enter latitude' | translate }}\\\"   (keydown)=\\\"validatePositiveDecimalInput($event)\\\" >\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"errorMessageDecimal\\\" class=\\\"alertRedColor\\\">{{errorMessageDecimal}}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.latitude\\\" class=\\\"alertRedColor\\\">{{form.inputerror.latitude}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ ' Longitude' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"longitude\\\" [(ngModel)]=\\\"form.data.longitude\\\" class=\\\"form-control\\\" maxlength=\\\"11\\\"\\r\\n                  placeholder=\\\"{{ 'Enter longitude' | translate }}\\\"   (keydown)=\\\"validatePositiveDecimalInput1($event)\\\" >\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"errorMessageDecimal1\\\" class=\\\"alertRedColor\\\">{{errorMessageDecimal1}}</span>\\r\\n              <span *ngIf=\\\"form.inputerror.longitude\\\" class=\\\"alertRedColor\\\">{{form.inputerror.longitude}}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Start Date Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'End Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"endDate\\\" [value]=\\\"form.data.endDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.endDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter endDate' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.endDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.endDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Analysis Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"analysisType\\\" [(ngModel)]=\\\"form.data.analysisType\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Analysis Type' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let type of form.preload.typeList\\\" [value]=\\\"type.key\\\">{{ type.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.analysisType\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.analysisType }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/abclist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-abc',\r\n  templateUrl: './abc.component.html',\r\n  styleUrls: ['./abc.component.css']\r\n})\r\nexport class AbcComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n  errorMessageOverview: string = '';\r\n  errorMessageDecimal:string='';\r\n  errorMsgInt:string='';\r\n  errorMessageDecimal1:string='';\r\n\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.XYZ, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.analysisType);\r\n    flag = flag && validator.isNotNullObject(form.endDate);\r\n    flag = flag && validator.isNotNullObject(form.quantity);\r\n    flag = flag && validator.isNotNullObject(form.latitude);\r\n    flag = flag && validator.isNotNullObject(form.longitude);\r\n    flag = flag && validator.isNotNullObject(form.overview);\r\n    flag = flag && validator.isNotNullObject(form.startDate);\r\n    flag = flag && validator.isNotNullObject(form.coverageAmount);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.analysisType = data.analysisType;\r\n    form.startDate = data.startDate;\r\n    form.endDate = data.endDate;\r\n    form.quantity = data.quantity;\r\n    form.latitude = data.latitude;\r\n    form.longitude = data.longitude;\r\n    form.overview = data.overview;\r\n    form.coverageAmount = data.coverageAmount;\r\n    \r\n  }\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n\r\n    if (inputValue.length < 3) {\r\n      this.errorMessageName = 'Name must be at least 3 characters long.';\r\n    } else if (inputValue.length > 15) {\r\n      this.errorMessageName = 'Name must not exceed 15 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n\r\n  validateIntegerInput(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const integerPattern = /^[0-9]*$/;  // Pattern to match only integer numbers\r\n  \r\n    // Allow Backspace, Delete, and Tab keys\r\n    if (!['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      if (!integerPattern.test(inputChar)) {\r\n        event.preventDefault();\r\n        this.errorMsgInt = 'Only integers are allowed.';\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Check the length of the input value\r\n    if (inputValue.length < 3) {\r\n      this.errorMsgInt = 'Input must be at least 3 digits long.';\r\n    } else if (inputValue.length > 8) {\r\n      this.errorMsgInt = 'Input must not exceed 8 digits.';\r\n    } else {\r\n      this.errorMsgInt = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  validateOverview(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageOverview = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n\r\n    if (inputValue.length < 10) {\r\n      this.errorMessageOverview = 'Overview must be at least 10 characters long.';\r\n    } else if (inputValue.length > 100) {\r\n      this.errorMessageOverview = 'Overview must not exceed 100 characters.';\r\n    } else {\r\n      this.errorMessageOverview = '';  // Clear error message if valid\r\n    }\r\n  }\r\n\r\n  validatePositiveDecimalInput(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLTextAreaElement).value;\r\n    const inputChar = event.key;\r\n    const positiveDecimalPattern = /^\\d*\\.?\\d*$/;  // Pattern to allow positive decimals (e.g., 123.45)\r\n  \r\n    // Allow Backspace, Delete, and Tab keys\r\n    if (!['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      // Check if the input value already has a decimal point and prevent another one\r\n      if (inputChar === '.' && inputValue.includes('.')) {\r\n        event.preventDefault();\r\n        this.errorMessageDecimal = 'Only one decimal point is allowed.';\r\n        return;\r\n      }\r\n  \r\n      // Check if the input value matches the positive decimal pattern (numbers and optional decimal point)\r\n      if (!positiveDecimalPattern.test(inputValue + inputChar)) {\r\n        event.preventDefault();\r\n        this.errorMessageDecimal = 'Only valid positive decimal numbers are allowed.';\r\n        return;\r\n      }\r\n  \r\n    \r\n    }\r\n  \r\n    // Check the length of the input value\r\n    if (inputValue.length > 10) {\r\n      this.errorMessageDecimal = 'Input must not exceed 10 characters.';\r\n    } else {\r\n      this.errorMessageDecimal = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n  validatePositiveDecimalInput1(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLTextAreaElement).value;\r\n    const inputChar = event.key;\r\n    const positiveDecimalPattern = /^\\d*\\.?\\d*$/;  // Pattern to allow positive decimals (e.g., 123.45)\r\n  \r\n    // Allow Backspace, Delete, and Tab keys\r\n    if (!['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      // Check if the input value already has a decimal point and prevent another one\r\n      if (inputChar === '.' && inputValue.includes('.')) {\r\n        event.preventDefault();\r\n        this.errorMessageDecimal1 = 'Only one decimal point is allowed.';\r\n        return;\r\n      }\r\n  \r\n      // Check if the input value matches the positive decimal pattern (numbers and optional decimal point)\r\n      if (!positiveDecimalPattern.test(inputValue + inputChar)) {\r\n        event.preventDefault();\r\n        this.errorMessageDecimal1 = 'Only valid positive decimal numbers are allowed.';\r\n        return;\r\n      }\r\n  \r\n    \r\n    }\r\n  \r\n    // Check the length of the input value\r\n    if (inputValue.length > 10) {\r\n      this.errorMessageDecimal1 = 'Input must not exceed 10 characters.';\r\n    } else {\r\n      this.errorMessageDecimal1 = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    if(this.errorMessageOverview){\r\n      return false;\r\n    }\r\n\r\n    if(this.errorMessageDecimal){\r\n      return false;\r\n    }\r\n\r\n    if(this.errorMessageDecimal1){\r\n      return false;\r\n    }\r\n    if(this.errorMsgInt){\r\n      return false;\r\n    }\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FiYy9hYmNsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  abclist works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-abclist',\r\n  templateUrl: './abclist.component.html',\r\n  styleUrls: ['./abclist.component.css']\r\n})\r\nexport class AbclistComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport {RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from \"./course/course.component\";\r\nimport {SubjectComponent }  from \"./subject/subject.component\"\r\nimport { Subject, from } from 'rxjs';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport {  FacultyComponent} from \"./faculty/faculty.component\";\r\nimport {  FacultyListComponent} from \"./faculty/faculty-list.component\";\r\nimport { TimetableComponent } from \"./timetable/timetable.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from './timetable/timetable-list.component';\r\nimport { SubjectListComponent } from './subject/subject-list.component';\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from './loader/loader.component';\r\n\r\nimport {MyprofileComponent} from './user/myprofile.component';\r\n\r\nimport { AssetComponent } from './asset/asset.component';\r\nimport { AssetListComponent } from './asset/assetlist.component';\r\n\r\nimport { DepartmentComponent } from './department/department.component';\r\nimport { DepartmentlistComponent } from './department/departmentlist.component';\r\nimport { StockanalysisComponent } from './stockanalysis/stockanalysis.component';\r\nimport { StockanalysislistComponent } from './stockanalysis/stockanalysislist.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerlistComponent } from './customer/customerlist.component';\r\nimport { AbcComponent } from './abc/abc.component';\r\nimport { AbclistComponent } from './abc/abclist.component';\r\n\r\n\r\nimport { PortfolioComponent } from './portfolio/portfolio.component';\r\nimport { PortfoliolistComponent } from './portfolio/portfoliolist.component';\r\nimport { RegionComponent } from './region/region.component';\r\nimport { RegionlistComponent } from './region/regionlist.component';\r\nimport { FollowupComponent } from './followup/followup.component';\r\nimport { FollowuplistComponent } from './followup/followuplist.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientlistComponent } from './client/clientlist.component';\r\nimport { XyzComponent } from './xyz/xyz.component';\r\nimport { XyzlistComponent } from './xyz/xyzlist.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent\r\n    },\r\n    \r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }\r\n    ,\r\n\r\n    {\r\n        path: 'login/:userparams',\r\n        component: LoginComponent\r\n    },\r\n   \r\n   \r\n    {\r\n        path: 'forgotpassword',\r\n        component: ForgotPasswordComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignUpComponent\r\n    },\r\n    {\r\n        path: 'message',\r\n        component: MessageComponent,\r\n      \r\n    },\r\n    {\r\n        path: 'message/:id',\r\n        component: MessageComponent\r\n    },\r\n    {\r\n        path: 'messagelist',\r\n        component: MessageListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'marksheet',\r\n        component: MarksheetComponent\r\n      \r\n    },\r\n    {\r\n        path: 'marksheet/:id',\r\n        component: MarksheetComponent\r\n      \r\n    },\r\n    {\r\n        path: 'marksheetlist',\r\n        component: MarksheetListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'marksheetmeritlist',\r\n        component: MarksheetmeritListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'getmarksheet',\r\n        component : GetmarksheetComponent\r\n      \r\n    },\r\n    {\r\n        path: 'college',\r\n        component: CollegeComponent\r\n      \r\n    },\r\n    {\r\n        path: 'college/:id',\r\n        component: CollegeComponent\r\n      \r\n    },\r\n    {\r\n        path: 'collegelist',\r\n        component: CollegeListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'student',\r\n        component: StudentComponent\r\n      \r\n    },\r\n    {\r\n        path: 'student/:id',\r\n        component: StudentComponent\r\n      \r\n    },\r\n    {\r\n        path: 'studentlist',\r\n        component: StudentListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'user',\r\n        component: UserComponent\r\n      \r\n    },\r\n    {\r\n        path: 'user/:id',\r\n        component: UserComponent\r\n      \r\n    },\r\n    {\r\n        path: 'userlist',\r\n        component: UserListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'role',\r\n        component : RoleComponent\r\n      \r\n    },\r\n    {\r\n        path : 'rolelist',\r\n        component : RoleListComponent\r\n      \r\n    },\r\n    {\r\n        path: 'role/:id',\r\n        component: RoleComponent\r\n      \r\n    },\r\n    {\r\n        path: 'course',\r\n        component: CourseComponent\r\n      \r\n    },\r\n    {\r\n        path: 'courselist',\r\n        component: CourseListComponent\r\n      \r\n    },\r\n    {\r\n        path :'course/:id',\r\n        component :CourseComponent\r\n      \r\n    },\r\n    {\r\n\r\n        path:'faculty',\r\n        component:FacultyComponent\r\n      \r\n    },\r\n    {\r\n        path : 'facultylist',\r\n        component : FacultyListComponent\r\n      \r\n    },\r\n    {\r\n        path : 'faculty/:id',\r\n        component : FacultyComponent\r\n      \r\n    },\r\n    {\r\n        path: 'timetable',\r\n        component : TimetableComponent\r\n      \r\n\r\n    },\r\n    {\r\n        path:'timetablelist',\r\n        component: TimetableListComponent\r\n      \r\n    },\r\n    {\r\n        path : 'timetable/:id',\r\n        component : TimetableComponent\r\n      \r\n    },\r\n    {\r\n        path: 'subject',\r\n        component: SubjectComponent\r\n      \r\n    },\r\n    {\r\n        path: 'subjectlist',\r\n        component : SubjectListComponent\r\n      \r\n    },\r\n    {\r\n        path : 'subject/:id',\r\n        component : SubjectComponent\r\n      \r\n    },\r\n    {\r\n        path : 'myprofile',\r\n        component: MyprofileComponent\r\n    },\r\n    {\r\n        path: 'file',\r\n        component: FileComponent\r\n    },\r\n    {   path :'changepassword',\r\n        component : ChangepasswordComponent\r\n      \r\n    }, \r\n    {\r\n        path: 'asset',\r\n        component: AssetComponent\r\n      },\r\n      {\r\n        path: 'assetlist',\r\n        component: AssetListComponent\r\n      },\r\n      {\r\n        path: 'asset/:id',\r\n        component: AssetComponent\r\n      },\r\n    {\r\n        path: 'department',\r\n        component : DepartmentComponent\r\n      \r\n    },\r\n    {\r\n        path : 'departmentlist',\r\n        component : DepartmentlistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'department/:id',\r\n        component: DepartmentComponent\r\n      \r\n    },\r\n    {\r\n        path: 'stockanalysis',\r\n        component : StockanalysisComponent\r\n      \r\n    },\r\n    {\r\n        path : 'stockanalysislist',\r\n        component : StockanalysislistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'stockanalysis/:id',\r\n        component: StockanalysisComponent\r\n      \r\n    }, {\r\n        path: 'customer',\r\n        component : CustomerComponent\r\n      \r\n    },\r\n    {\r\n        path : 'customerlist',\r\n        component : CustomerlistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'customer/:id',\r\n        component: CustomerComponent\r\n      \r\n    },{\r\n        path: 'abc',\r\n        component : AbcComponent\r\n      \r\n    },\r\n    {\r\n        path : 'abclist',\r\n        component : AbclistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'abc/:id',\r\n        component: AbcComponent\r\n      \r\n    },{\r\n        path: 'portfolio',\r\n        component : PortfolioComponent\r\n      \r\n    },\r\n    {\r\n        path : 'portfoliolist',\r\n        component : PortfoliolistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'portfolio/:id',\r\n        component: PortfolioComponent\r\n      \r\n    },{\r\n        path: 'region',\r\n        component : RegionComponent\r\n      \r\n    },\r\n    {\r\n        path : 'regionlist',\r\n        component : RegionlistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'region/:id',\r\n        component: RegionComponent\r\n      \r\n    },{\r\n        path: 'followup',\r\n        component : FollowupComponent\r\n      \r\n    },\r\n    {\r\n        path : 'followuplist',\r\n        component : FollowuplistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'followup/:id',\r\n        component: FollowupComponent\r\n      \r\n    },{\r\n        path: 'client',\r\n        component : ClientComponent\r\n      \r\n    },\r\n    {\r\n        path : 'clientlist',\r\n        component : ClientlistComponent\r\n      \r\n    },\r\n    {\r\n        path: 'client/:id',\r\n        component: ClientComponent\r\n      \r\n    },\r\n    {\r\n        path: 'xyz',\r\n        component: XyzComponent\r\n      \r\n    },\r\n    {\r\n        path: 'xyz/:id',\r\n        component: XyzComponent\r\n      \r\n    },\r\n    {\r\n        path: 'xyzlist',\r\n        component: XyzlistComponent\r\n      \r\n    }\r\n      \r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes,{useHash:true})],\r\n    exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }","module.exports = \".dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  .dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f1f1f1;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n  .app {\\r\\n    margin: 48px;\\r\\n  }\\r\\n  \\r\\n  .buttons {\\r\\n    display: flex;\\r\\n    max-width: 500px;\\r\\n    justify-content: space-evenly;\\r\\n    margin-bottom: 48px;\\r\\n\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsVUFBVTtFQUNaOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztFQUNoQjs7RUFDQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLG1CQUFtQjs7RUFFckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIG1pbi13aWR0aDogMTYwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIC5hcHAge1xyXG4gICAgbWFyZ2luOiA0OHB4O1xyXG4gIH1cclxuICBcclxuICAuYnV0dG9ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxuXHJcbiAgfVxyXG5cclxuICBcclxuICAiXX0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription, Observable,timer } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent{\r\n \r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n \r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserComponent } from './user/user.component';\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\n\r\nimport { RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from './course/course.component';\r\nimport { SubjectComponent } from './subject/subject.component';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { TimetableComponent } from './timetable/timetable.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport { FacultyComponent } from './faculty/faculty.component';\r\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from \"./timetable/timetable-list.component\";\r\nimport { SubjectListComponent } from \"./subject/subject-list.component\";\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from \"./loader/loader.component\";\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MyprofileComponent } from './user/myprofile.component';\r\nimport { AuthService } from './auth-service.service';\r\n\r\nimport { AssetComponent } from './asset/asset.component';\r\nimport { AssetListComponent } from './asset/assetlist.component';\r\n\r\nimport { DepartmentComponent } from './department/department.component';\r\nimport { DepartmentlistComponent } from './department/departmentlist.component';\r\nimport { StockanalysisComponent } from './stockanalysis/stockanalysis.component';\r\nimport { StockanalysislistComponent } from './stockanalysis/stockanalysislist.component';\r\nimport { ComputerlistComponent } from './computer/computerlist.component';\r\nimport { ComputerComponent } from './computer/computer.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerlistComponent } from './customer/customerlist.component';\r\nimport { AbcComponent } from './abc/abc.component';\r\nimport { AbclistComponent } from './abc/abclist.component';\r\n\r\nimport { PortfolioComponent } from './portfolio/portfolio.component';\r\nimport { PortfoliolistComponent } from './portfolio/portfoliolist.component';\r\nimport { RegionComponent } from './region/region.component';\r\nimport { RegionlistComponent } from './region/regionlist.component';\r\nimport { FollowupComponent } from './followup/followup.component';\r\nimport { FollowuplistComponent } from './followup/followuplist.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientlistComponent } from './client/clientlist.component';\nimport { XyzComponent } from './xyz/xyz.component';\nimport { XyzlistComponent } from './xyz/xyzlist.component';\r\n\r\n\r\n\r\n// import { AuthService } from './auth.service';\r\n\r\n\r\nexport function myHttpLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MarksheetComponent,\r\n    MarksheetListComponent,\r\n    StudentComponent,\r\n    StudentListComponent,\r\n    CollegeComponent,\r\n    CollegeListComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    ForgotPasswordComponent,\r\n    SignUpComponent,\r\n    MessageComponent,\r\n    MessageListComponent,\r\n    UserComponent,\r\n    UserListComponent,\r\n\r\n    RoleComponent,\r\n    RoleListComponent,\r\n    CourseComponent,\r\n    SubjectComponent,\r\n    SubjectListComponent,\r\n    TimetableComponent,\r\n    CourseListComponent,\r\n    FacultyComponent,\r\n    FacultyListComponent,\r\n    TimetableComponent,\r\n    TimetableListComponent,\r\n    MarksheetmeritListComponent,\r\n    GetmarksheetComponent,\r\n    ChangepasswordComponent,\r\n    LoaderComponent,\r\n    FileComponent,\r\n    NavbarComponent,\r\n    SpinnerComponent,\r\n    FooterComponent,\r\n    MyprofileComponent,\r\n\r\n\r\n   \r\n    \r\n    AssetComponent,\r\n    AssetListComponent,\r\n    DepartmentComponent,\r\n    DepartmentlistComponent,\r\n    StockanalysisComponent,\r\n    StockanalysislistComponent,\r\n    ComputerlistComponent,\r\n    ComputerComponent,\r\n    CustomerComponent,\r\n    CustomerlistComponent,\r\n    AbcComponent,\r\n    AbclistComponent,\r\n \r\n    PortfolioComponent,\r\n    PortfoliolistComponent,\r\n    RegionComponent,\r\n    RegionlistComponent,\r\n    FollowupComponent,\r\n    FollowuplistComponent,\r\n    ClientComponent,\r\n    ClientlistComponent,\r\n    XyzComponent,\r\n    XyzlistComponent,\r\n    \r\n    \r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: myHttpLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AuthService, multi: true\r\n    },\r\n    HttpServiceService,\r\n    DataValidator,\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n\r\n})\r\n\r\n\r\nexport class AppModule {\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0L2Fzc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"assetForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Asset' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Asset' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Registration Number' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"registrationNumber\\\" [(ngModel)]=\\\"form.data.registrationNumber\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageRegistrationNumber', 20, 'char')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Registration Number' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageRegistrationNumber\\\" class=\\\"alertRedColor\\\">{{ errorMessageRegistrationNumber }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.registrationNumber\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.registrationNumber }}</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Acquisition Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"acquisitionDate\\\" [value]=\\\"form.data.acquisitionDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                (input)=\\\"form.data.acquisitionDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Acquisition Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"form.inputerror?.acquisitionDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.acquisitionDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Coverage Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-dollar-sign grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"coverageAmount\\\" [(ngModel)]=\\\"form.data.coverageAmount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageCoverageAmount', 10, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Coverage Amount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageCoverageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageCoverageAmount }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.coverageAmount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.coverageAmount }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Paint Color' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"paintColor\\\" [(ngModel)]=\\\"form.data.paintColor\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Paint Color' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let color of form.preload.paintColorList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.paintColor\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.paintColor }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n  \\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n            \\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/assetlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-asset',\r\n  templateUrl: './asset.component.html',\r\n  styleUrls: ['./asset.component.css']\r\n})\r\nexport class AssetComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.ASSET, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.registrationNumber);\r\n    flag = flag && validator.isNotNullObject(form.acquisitionDate);\r\n    flag = flag && validator.isNotNullObject(form.coverageAmount);\r\n    flag = flag && validator.isNotNullObject(form.paintColor);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.registrationNumber = data.registrationNumber;\r\n    form.acquisitionDate = data.acquisitionDate;\r\n    form.coverageAmount = data.coverageAmount;\r\n    form.paintColor = data.paintColor;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0L2Fzc2V0bGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Asset List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"registrationNumber\\\" [(ngModel)]=\\\"form.searchParams.registrationNumber\\\" class=\\\"form-control\\\"\\r\\n          (keydown)=\\\"filterInput($event, 'errorMessageRegistrationNumber', 20, '')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Registration Number' | translate }}\\\">\\r\\n            <span *ngIf=\\\"errorMessageRegistrationNumber\\\" class=\\\"alertRedColor\\\">{{ errorMessageRegistrationNumber }}</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"acquisitionDate\\\" [(ngModel)]=\\\"form.searchParams.acquisitionDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Acquisition Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"coverageAmount\\\" [(ngModel)]=\\\"form.searchParams.coverageAmount\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageCoverageAmount', 10, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Coverage Amount' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageCoverageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageCoverageAmount }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"paintColor\\\" [(ngModel)]=\\\"form.searchParams.paintColor\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select Paint Color' | translate }}</option>\\r\\n            <option *ngFor=\\\"let color of form.preload.paintColorList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/asset')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add Asset' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Registration Number' | translate }}</th>\\r\\n              <th>{{ 'Acquisition Date' | translate }}</th>\\r\\n              <th>{{ 'Coverage Amount' | translate }}</th>\\r\\n              <th>{{ 'Paint Color' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.registrationNumber }}</td>\\r\\n              <td>{{ m.acquisitionDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.coverageAmount }}</td>\\r\\n              <td>{{ findSelValueByKey(m.paintColor,form.preload.paintColorList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/asset/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/assetlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/assetlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-assetlist',\r\n  templateUrl: './assetlist.component.html',\r\n  styleUrls: ['./assetlist.component.css']\r\n})\r\nexport class AssetListComponent extends BaseListCtl implements OnInit {\r\n  myKey = \"\";\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {},\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ASSET, locator, route);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceService } from './http-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService implements HttpInterceptor {\r\n\r\n  constructor(private http: HttpServiceService) { }\r\n  \r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    if (localStorage.getItem('fname')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n        \"withCredentials\" : \"true\",\r\n        \"name\" : \"Suraj\",\r\n          \r\n        \r\n        }\r\n      })\r\n    }\r\n        console.log(req.headers.get(\"Authorization\")+\"------------------->>>\")\r\n    return next.handle(req);\r\n\r\n  }\r\n\r\n}","import { OnInit, Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from './base.component';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { element } from '@angular/core/src/render3';\r\n\r\nexport class BaseListCtl extends BaseCtl {  \r\n  \r\n    @ViewChildren(\"checkboxes\") checkboxes: QueryList<ElementRef>;\r\n  deleteRecordList: any = [];\r\n  isMasterSel:boolean = false ;\r\n  checkList=0;\r\n\r\n  constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(endpoint, locator, route);    \r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {   \r\n    this.preload();\r\n   // this.preloadd();\r\n    this.search();\r\n    this.isMasterSel = false ;\r\n  }\r\n\r\n  display() {\r\n    this.search();\r\n  }\r\n\r\n  submit() {\r\n    this.form.pageNo=0;\r\n    if(this.form.searchParams.roleId==\"undefined\" || this.form.searchParams.id==\"undefined\"){\r\n    \r\n      this.form.searchParams={}\r\n      this.search();\r\n    }else{\r\n    this.search();\r\n    }\r\n  }\r\n  \r\n  delete(id) {\r\n    super.delete(id, function () {\r\n      this.search();\r\n    });\r\n  }\r\n\r\n\r\n  next() {\r\n    this.form.pageNo++;\r\n     this.display(); \r\n   \r\n   \r\n    this.isMasterSel = false ;  \r\n  //  this.searchOperation('previous');\r\n  }\r\n\r\nexit(){ \r\n   \r\n  location.reload();\r\n}\r\n  previous() {\r\n    if (this.form.pageNo > 0) {\r\n      this.form.pageNo--\r\n   //  this.display(); \r\n    this.isMasterSel = false ;\r\n    this.searchOperation('previous');    \r\n    }\r\n  }\r\n\r\n  \r\n\r\n  checkUncheckAll(event) {\r\n    const checked = event.target.checked;\r\n    this.checkboxes.forEach((element) => {     \r\n        element.nativeElement.checked = checked     \r\n    });   \r\n  }\r\n  checklistUpdate(){\r\n\r\n    this.isMasterSel=false;\r\n    this.checkList=0;\r\n    this.checkboxes.forEach((element) =>{\r\nif(element.nativeElement.checked==true){  \r\n  this.checkList=this.checkList+1;\r\n}\r\n    });\r\n    if(this.checkList==this.form.list.length){\r\n      this.isMasterSel=true;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n//   deleteMany(){\r\n//   console.log('delete Many Records starts ');\r\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \r\n//   var msg : String =''\r\n//   this.deleteRecordList.length=0;\r\n//   console.log('record deleting start ')\r\n//   var isRecordSelected:boolean = false ;\r\n \r\n//     this.checkboxes.forEach((element) => {\r\n//       if (element.nativeElement.checked) {\r\n//         // console.log('record deleting ' + element.nativeElement.id)\r\n//         this.deleteRecordList.push(element.nativeElement.id);\r\n//         isRecordSelected = true ;\r\n//       }\r\n//     });     \r\n  \r\n//     if(isRecordSelected){\r\n//       console.log('record(s) for delete ' + this.deleteRecordList)        \r\n//       this.serviceLocator.httpService.get(this.api.deleteMany + \"/\" + this.deleteRecordList + '?pageNo=' +this.form.pageNo, function (res) {\r\n//         if (res.success) {\r\n//             console.log('Inside response success ')\r\n//           //  this.deleteMany();\r\n//          //  this.form.message = \"Data is deleted\";\r\n//        //  msg =\"Data is deleted\";\r\n//         //  this.form.message = res.result.message;\r\n       \r\n//           console.log('deleteMany Calling Callback'); \r\n//           this.search();  \r\n//     } else {\r\n//       this.form.error = true;\r\n//       this.form.message = res.result.message;\r\n//     }\r\n//   });\r\n//   this.form.message = \"Data is deleted\" ;\r\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \r\n  \r\n//     }else{\r\n//       this.form.message = \"Select Atleast One Record\";\r\n//         this.form.error = true;\r\n//     console.log('No record(s) for delete ')\r\n//   }\r\n//   console.log('delete Many Records ends ');\r\n// }\r\n\r\n\r\n\r\ndeleteMany(){\r\n  console.log('delete Many Records starts ');\r\n  console.log('this.form.pageNo ' +this.form.pageNo);  \r\n  this.form.error = false;\r\n  this.deleteRecordList.length=0;\r\n  console.log('record deleting start ')\r\n  var isRecordSelected:boolean = false ;\r\n  this.form.pageNo=0;\r\n \r\n    this.checkboxes.forEach((element) => {\r\n      if (element.nativeElement.checked) {\r\n        // console.log('record deleting ' + element.nativeElement.id)\r\n        this.deleteRecordList.push(element.nativeElement.id);\r\n        isRecordSelected = true ;\r\n      }\r\n    });     \r\n  \r\n    if(isRecordSelected){\r\n      console.log('record(s) for delete ' + this.deleteRecordList) ;  \r\n         \r\n      super.deleteMany(this.deleteRecordList + '?pageNo=' +this.form.pageNo,function(){\r\n      //  this.search();  \r\n            \r\n      });  \r\n    }else{\r\n      this.form.message = \"Select Atleast One Record\";\r\n        this.form.error = true;\r\n    console.log('No record(s) for delete ')\r\n  }\r\n  this.isMasterSel = false ;  \r\n  console.log('delete Many Records ends ');\r\n}\r\n\r\n\r\ngenerateReport(){\r\n  \r\n}\r\n\r\n}\r\n\r\n","import { OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\n\r\n\r\nexport class BaseCtl implements OnInit {\r\n\r\n  public api = {\r\n    endpoint: null,\r\n    get: null,\r\n    save: null,\r\n    search: null,\r\n    delete: null,\r\n    deleteMany: null,\r\n    preload: null,\r\n    report: null,\r\n    address:null,\r\n    //preloadd:null\r\n  }\r\n\r\n  initApi(ep) {\r\n    this.api.endpoint = ep;\r\n    this.api.get = ep + \"/get\";\r\n    this.api.save = ep + \"/save\";\r\n    this.api.search = ep + \"/search\";\r\n    this.api.delete = ep + \"/delete\";\r\n    this.api.deleteMany = ep + \"/deleteMany\";\r\n    this.api.preload = ep + \"/preload\";\r\n    this.api.report = ep + \"/report\";\r\n    this.api.address = ep + \"/address\";\r\n   // this.api.preloadd = ep + \"/preloadd\";\r\n\r\n\r\n    console.log(\"API\", this.api);\r\n  }\r\n\r\n  /**\r\n   * Form contains preload data, error/sucess message \r\n   */\r\n  public form : any= {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    preloadd: [], // preload data\r\n\r\n    data: { id: null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo: 0\r\n\r\n  };\r\n  nextList = 0;\r\n  /**\r\n   * Initialize services \r\n   * \r\n   * @param serviceLocator \r\n   * @param route \r\n   */\r\n  constructor(public endpoint, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\r\n\r\n    var _self = this;\r\n\r\n    _self.initApi(endpoint);\r\n\r\n    /**\r\n     * Get primary key from path variale\r\n     */\r\n    serviceLocator.getPathVariable(route, function (params) {\r\n      _self.form.data.id = params[\"id\"];\r\n      console.log('I GOT ID', _self.form.data.id);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n    this.preload();\r\n   // this.preloadd();\r\n    if (this.form.data.id && this.form.data.id > 0) {\r\n      this.display();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loded preload data\r\n   */\r\n  preload() {\r\n    console.log(\"preload start\")\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\r\n      console.log(\"base list preload\",_self.api.preload)\r\n      if (res.success) {\r\n        _self.form.preload = res.result;\r\n      } else {\r\n        _self.form.error = true\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  // preloadd() {\r\n  //   console.log(\"preload start\")\r\n  //   var _self = this;\r\n  //   this.serviceLocator.httpService.get(_self.api.preloadd, function (res) {\r\n  //     console.log(\"base list preload\",_self.api.preloadd)\r\n  //     if (res.success) {\r\n  //       _self.form.preloadd = res.result;\r\n  //     } else {\r\n  //       _self.form.error = true\r\n  //       _self.form.message = res.result.message;\r\n  //     }\r\n  //     console.log('FORM', _self.form);\r\n  //   });\r\n  // }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n  validateForm(form) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Searhs records \r\n   */\r\n    search() {\r\n    console.log(\"search start\")\r\n    var _self = this;\r\n    console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        _self.nextList = res.result.nextList;\r\n\r\n        \r\n        if (_self.form.list.length == 0) {\r\n          \r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\", _self.form.list.length);\r\n      } else {\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  searchOperation(operation: String) {\r\n    console.log(\"previous/next search start\")\r\n    var _self = this;\r\n    console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n      if (operation == 'next' || operation == 'previous') {\r\n        _self.nextList = res.result.nextList;\r\n        _self.form.message = null;\r\n        _self.form.error = false;\r\n      }\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        if (_self.form.list.length == 0) {\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\", _self.form.list.length);\r\n      } else {\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Contains display logic. It fetches data from database for the primary key \r\n   */\r\n  display() {\r\n\r\n    var _self = this;\r\n    console.log('Inside display method');\r\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\r\n     _self.form.data.id=0;\r\n       if (res.success) {\r\n         _self.populateForm(_self.form.data, res.result.data);\r\n       }\r\n       else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Populate HTML form data\r\n   * Overridden by child classes.\r\n   * \r\n   * @param form \r\n   * @param data \r\n   */\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.iduser + 'formid in base ctl populate form');\r\n  }\r\n\r\n  /**\r\n   * Contains submit logic. It saves data\r\n   */\r\n\r\n\r\n  submit() {\r\n    var _self = this;\r\n\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(\"form data going to be submit\" + this.form.data);\r\n    //  console.log(\"form data going to be submit\" + this.studentId);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n       _self.form.inputerror = {};\r\n\r\n       console.log('dataa ===== > ', res.result.data);\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        \r\n        if (_self.form.data.id && _self.form.data.id > 0) {\r\n          _self.form.data.id = res.result.data;\r\n        } else {\r\n          _self.form.data.id = 0;\r\n        }\r\n\r\n        console.log(_self.form.data.id);\r\n        //  console.log(\"--------------------.\");\r\n        //return _self.form.data.id ;\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n     // _self.form.data.id = res.result.data.id;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  delete(id, callback?) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\r\n      if (res.success) {\r\n        _self.form.message = \"Data is deleted\";\r\n        if (callback) {\r\n          console.log('Response Success and now Calling Callback');\r\n          //  callback();  \r\n          this.search();\r\n        }\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n    deleteMany(id, callback?) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.post(_self.api.deleteMany + \"/\" + id, this.form.searchParams, function (res) {\r\n      if (res.success) {\r\n        _self.form.message = \"Data is deleted\";\r\n        \r\n        \r\n\r\n        if (callback) {\r\n          console.log('Response Success and now Calling Callback');\r\n          _self.form.list = res.result.data;\r\n          console.log(\"List ::  \", + res.data);\r\n          console.log(\"List Size\", _self.form.list.length);\r\n          //  callback();       \r\n          \r\n        }\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  generateReport() {\r\n    var _self = this;\r\n    console.log('********* Generating Report ********************');\r\n    this.serviceLocator.httpService.get(_self.api.report, function (res) {\r\n\r\n      if (res.success) {\r\n        console.log('*********  Report Generated ********************');\r\n        alert('pass');\r\n\r\n      } else {\r\n        console.log('********* Error in Generating Report  ********************');\r\n        alert('fail');\r\n      }\r\n    });\r\n\r\n  }\r\n  /**\r\n   * Forward to page\r\n   * @param page \r\n   */\r\n\r\n  forward(page) {\r\n    console.log(page + '--->>page value');\r\n    this.serviceLocator.forward(page);\r\n  }\r\n  \r\n  filterInputD(event: KeyboardEvent, errorField: string, maxLength: number): void {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let input: string = inputElement.value;\r\n  \r\n    // Regular expressions\r\n    const allowedChars = /^[0-9.]$/;\r\n    const hasDot = input.includes('.');\r\n    const dotPosition = input.indexOf('.');\r\n    const decimalPart = input.substring(dotPosition + 1);\r\n  \r\n    // Handle dot key\r\n    if (charCode === 190 || charCode === 46) { // Dot key for different browsers\r\n      if (hasDot) {\r\n        event.preventDefault();\r\n        this[errorField] = 'Only one dot is allowed.';\r\n        return;\r\n      }\r\n      // Allow the dot and exit\r\n      return;\r\n    }\r\n  \r\n    // Check if the typed character is allowed\r\n    if (!allowedChars.test(charStr) && charCode !== 8 && charCode !== 32) {\r\n      event.preventDefault();\r\n      this[errorField] = 'Only numbers and one dot are allowed.';\r\n      return;\r\n    }\r\n  \r\n    // Check decimal places\r\n    if (hasDot) {\r\n      if (charCode !== 8 && decimalPart.length >= 2) {\r\n        event.preventDefault();\r\n        this[errorField] = 'Only up to two digits are allowed after the dot.';\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Handle input length\r\n    if (input.length >= maxLength && charCode !== 8) {\r\n      event.preventDefault();\r\n      this[errorField] = `Only ${maxLength} characters are allowed.`;\r\n      return;\r\n    }\r\n  \r\n    // Clear error message if input is valid\r\n    this[errorField] = '';\r\n  }\r\n  \r\n\r\n  filterInput(event: KeyboardEvent, errorField: string, maxLength: number, type: string): void {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    console.log('charCode=',charCode);\r\n    const charStr = String.fromCharCode(charCode);\r\n    let allowedChars: RegExp;\r\n    let errorMsg: string, lerrorMsg: string;\r\n\r\n    switch (type) {\r\n      case 'int':\r\n        allowedChars = /^[0-9]$/;  // Allows numbers and numpad keys\r\n        errorMsg = 'Only integers are allowed.';\r\n        lerrorMsg = 'digits';\r\n        break;\r\n      case 'double':\r\n        allowedChars = /^[0-9.]$/;\r\n        errorMsg = 'Only numbers are allowed.';\r\n        lerrorMsg = 'digits';\r\n        break;\r\n      case 'char':\r\n        allowedChars = /^[a-zA-Z\\s.]$/;\r\n        errorMsg = 'Only letters are allowed.';\r\n        lerrorMsg = 'characters';\r\n      default:\r\n        allowedChars = /^[a-zA-Z0-9\\s.-]+$/;\r\n        errorMsg = 'Only alphanumeric chars are allowed.';\r\n        lerrorMsg = 'characters';\r\n        break;\r\n    }\r\n\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let input: string = inputElement.value;\r\n    // Numpad key codes range from 96 (Numpad 0) to 105 (Numpad 9)\r\n    const isNumpadKey = charCode >= 96 && charCode <= 105;\r\n\r\n    // Check if the typed character matches the allowed characters\r\n    if ((!allowedChars.test(charStr) && charCode !== 8 && charCode !== 32 && charCode !== 16 && charCode !== 46)\r\n      || (type === 'char' && isNumpadKey)) {\r\n      event.preventDefault();\r\n      this[errorField] = errorMsg;\r\n    }\r\n\r\n    else if (charCode !== 8 && input.length >= maxLength) {\r\n      event.preventDefault();\r\n      this[errorField] = `Only ${maxLength} ${lerrorMsg} are allowed.`;\r\n    } else {\r\n      this[errorField] = '';\r\n    }\r\n\r\n    inputElement.addEventListener('blur', () => {\r\n      this[errorField] = '';\r\n    });\r\n\r\n    console.log('Input:', input);\r\n  }\r\n\r\n  \r\n\r\n  findSelValueByKey(selKey: any, preloadList: { key: number; value: string }[]): string {\r\n    if (preloadList) {\r\n      console.log(\"preloadList:\", preloadList);\r\n      console.log(\"Searching for selKey:\", selKey);\r\n      const sel = preloadList.find(a => a.key === Number(selKey));\r\n      console.log(\"Found sel:\", sel);\r\n      return sel ? sel.value : '';\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  \r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC9jbGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"clientForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Client' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Client' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Full Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fullName\\\" [(ngModel)]=\\\"form.data.fullName\\\" class=\\\"form-control\\\" maxlength=\\\"21\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter Full Name' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.fullName\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.fullName }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            \\r\\n\\r\\n           \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Phone' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessagePhone', 10, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Phone' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessagePhone\\\" class=\\\"alertRedColor\\\">{{ errorMessagePhone }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.phone\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.phone }}</span>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Appointment Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"appointmentDate\\\" [value]=\\\"form.data.appointmentDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.appointmentDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Appointment Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.appointmentDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.appointmentDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Illness' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"illness\\\" [(ngModel)]=\\\"form.data.illness\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Illness' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let ill of form.preload.illnessList\\\" [value]=\\\"ill.key\\\">{{ ill.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.illness\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.illness }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/clientlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent  extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.CLIENT, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.fullName);\r\n    flag = flag && validator.isNotNullObject(form.illness);\r\n    flag = flag && validator.isNotNullObject(form.appointmentDate);\r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.fullName = data.fullName;\r\n    form.illness = data.illness;\r\n    form.appointmentDate = data.appointmentDate;\r\n    form.phone = data.phone;\r\n  }\r\n\r\n  // validateName(event: KeyboardEvent): void {\r\n  //   const inputValue = (event.target as HTMLInputElement).value;\r\n  //   const inputChar = event.key;\r\n  //   const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n  //   if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n  //     event.preventDefault();\r\n  //     this.errorMessageName = 'Only alphabets are allowed.';\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (inputValue.length < 1) {\r\n  //     this.errorMessageName = 'Name must be at least  characters long.';\r\n  //   } else if (inputValue.length > 15) {\r\n  //     this.errorMessageName = 'Name must not exceed 15 characters.';\r\n  //   } else {\r\n  //     this.errorMessageName = '';  // Clear error message if valid\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z\\s]*$/;\r\n  \r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n  \r\n    if (inputValue.length > 20) {\r\n      this.errorMessageName = 'Full Name must not exceed 20 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC9jbGllbnRsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Client List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.fullName\\\"\\r\\n            placeholder=\\\"{{ 'Search  Full Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.searchParams.phone\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessagePhone', 10, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Phone' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessagePhone\\\" class=\\\"alertRedColor\\\">{{ errorMessagePhone }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"appointmentDate\\\" [(ngModel)]=\\\"form.searchParams.appointmentDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Appointment Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" (change)=\\\"validateDate($event)\\\">\\r\\n          <div *ngIf=\\\"!isValidStartDate\\\" class=\\\"text-danger\\\">\\r\\n            {{ startDateErrorMessage }}\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"illness\\\" [(ngModel)]=\\\"form.searchParams.illness\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select Illness' | translate }}</option>\\r\\n            <option *ngFor=\\\"let ill of form.preload.illnessList\\\" [value]=\\\"ill.key\\\">{{ ill.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/client')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add Client' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Full Name' | translate }}</th>\\r\\n              <th>{{ 'Appointment Date' | translate }}</th>\\r\\n              <th>{{ 'Phone' | translate }}</th>\\r\\n              <th>{{ 'Illness' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.fullName }}</td>\\r\\n              <td>{{ m.appointmentDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.phone }}</td>\\r\\n              <td>{{ findSelValueByKey(m.illness,form.preload.illnessList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/client/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/clientlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/clientlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-clientlist',\r\n  templateUrl: './clientlist.component.html',\r\n  styleUrls: ['./clientlist.component.css']\r\n})\r\nexport class ClientlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  isValidStartDate: boolean = true;\r\n  startDateErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n\r\n    super(locator.endpoints.CLIENT, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string): void {\r\n    const value = event.target.value;\r\n\r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        // Replace non-alphabetic characters\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); \r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n        this.isValidNameInput = false;\r\n      } \r\n      // Restrict input to a maximum length of 15 characters\r\n      else if (value.length > 15) {\r\n        // Trim the input to 15 characters\r\n        event.target.value = value.substring(0, 20); \r\n        this.nameErrorMessage = 'Full Name cannot exceed 20 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // Clear error message if input is valid\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n\r\n  validateDate(event: any) {\r\n    const selectedDate = new Date(event.target.value);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set today's time to midnight to compare only the date\r\n\r\n    if (selectedDate > today) {\r\n      // If selected date is in the future\r\n      this.startDateErrorMessage = 'Please enter a past date';\r\n      this.isValidStartDate = false;\r\n    } else {\r\n      // If selected date is valid (past or today)\r\n      this.startDateErrorMessage = ''; // Clear error message\r\n      this.isValidStartDate = true;\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%;\\r\\nbackground: url(assets/files/211.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n       <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'College List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select name' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/college')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add College' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Address' | translate }}</th>\\r\\n                <th>{{'Phone' | translate }}</th>\\r\\n                <th>{{'City' | translate }}</th>\\r\\n                <th>{{'State' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.address }} </td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.city }} </td>\\r\\n                <td> {{ m.state }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/college/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>\\r\\n              <table style=\\\"width: 100%;\\\">\\r\\n                <tr>\\r\\n                  <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button></td>\\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/collegelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n    \\r\\n    \\r\\n            \\r\\n                <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n                </tr>\\r\\n                </table>\\r\\n    \\r\\n            \\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-college-list',\r\n  templateUrl: './college-list.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add College' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update College' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.name}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Address' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"addr\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Address' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.address}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'City' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"form.data.city\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter City' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.city}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'State' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter State' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No.' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phnNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Phone No.' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/collegelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-college',\r\n  templateUrl: './college.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.address = data.address;\r\n    form.state = data.state;\r\n    form.city = data.city;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXB1dGVyL2NvbXB1dGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  computer works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-computer',\r\n  templateUrl: './computer.component.html',\r\n  styleUrls: ['./computer.component.css']\r\n})\r\nexport class ComputerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXB1dGVyL2NvbXB1dGVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  computerlist works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-computerlist',\r\n  templateUrl: './computerlist.component.html',\r\n  styleUrls: ['./computerlist.component.css']\r\n})\r\nexport class ComputerlistComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\"\\r\\n style=\\\"padding-top: 3%;\\r\\npadding-bottom: 15%;\\r\\nbackground: url(assets/files/wav1.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\nheight:90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Course List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select CourseName' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.duration\\\"\\r\\n            placeholder=\\\"{{'Search Duration' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/course')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Course' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Duration' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n                <td> {{ m.duration }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/course/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n              \\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/courselist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-course-list',\r\n  templateUrl: './course-list.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COURSE, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Course' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Course' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.data.courseName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Course Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.courseName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Duration' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\" >\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n            \\r\\n                <select class=\\\"form-control\\\" name=\\\"duration\\\"\\r\\n                  [(ngModel)]=\\\"form.data.duration\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option [value]=\\\"1\\\">1 Year</option>\\r\\n                  <option [value]=\\\"2\\\">2 Year</option>\\r\\n                  <option [value]=\\\"3\\\">3 Year</option>\\r\\n                  <option [value]=\\\"4\\\">4 Year</option>\\r\\n                  <option [value]=\\\"5\\\">5 Year</option>\\r\\n\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.duration}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" placeholder=\\\"{{'Enter Description' | translate }}\\\" name=\\\"description\\\"\\r\\n                  [(ngModel)]=\\\"form.data.description\\\"></textarea>\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/courselist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List\\r\\n                ' | translate }}              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COURSE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n \r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.courseName);\r\n    flag = flag && validator.isNotNullObject(form.duration);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseName = data.courseName;\r\n    form.duration = data.duration;\r\n    form.description = data.description;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"customerForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Customer' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Customer' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <!-- Name Field with Validation -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageAmount', 8, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter amount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.amount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.amount }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Start Date Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Analysis Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"analysisType\\\" [(ngModel)]=\\\"form.data.analysisType\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Analysis Type' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let color of form.preload.analysisList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.analysisType\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.analysisType }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/customerlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.CUSTOMER, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.analysisType);\r\n    flag = flag && validator.isNotNullObject(form.startDate);\r\n    flag = flag && validator.isNotNullObject(form.amount);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.analysisType = data.analysisType;\r\n    form.startDate = data.startDate;\r\n    form.amount = data.amount;\r\n  }\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n\r\n    if (inputValue.length < 3) {\r\n      this.errorMessageName = 'Name must be at least 3 characters long.';\r\n    } else if (inputValue.length > 15) {\r\n      this.errorMessageName = 'Name must not exceed 15 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Customer List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search  Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.searchParams.amount\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageAmount', 10, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Amount' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"analysisType\\\" [(ngModel)]=\\\"form.searchParams.analysisType\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select Analysis Type' | translate }}</option>\\r\\n            <option *ngFor=\\\"let color of form.preload.analysisList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/customer')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add customer' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Name' | translate }}</th>\\r\\n              <th>{{ 'Start Date' | translate }}</th>\\r\\n              <th>{{ 'Amount' | translate }}</th>\\r\\n              <th>{{ 'Analysis Type' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.startDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.amount }}</td>\\r\\n              <td>{{ findSelValueByKey(m.analysisType,form.preload.analysisList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/customer/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/customerlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/customerlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-customerlist',\r\n  templateUrl: './customerlist.component.html',\r\n  styleUrls: ['./customerlist.component.css']\r\n})\r\nexport class CustomerlistComponent  extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.CUSTOMER, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n  \r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); // Remove non-alphabetic characters\r\n        this.nameErrorMessage = 'Please type alphabets and spaces only';\r\n        this.isValidNameInput = false;\r\n      } else if (value.length > 15) {\r\n        // Restrict input to a maximum length of 15 characters\r\n        event.target.value = value.substring(0, 15); // Trim the input to 15 characters\r\n        this.nameErrorMessage = 'Name cannot exceed 15 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // If input is valid, clear the error message\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    \r\n  \r\n  }\r\n  \r\n  }\r\n  \r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <app-navbar></app-navbar>\\r\\n<div>\\r\\n    <p class=\\\"text-info font-weight-bold\\\" style=\\\"padding-left: 30%; font-size: 70px;\\\">WELCOME TO ORS</p>\\r\\n    <div style=\\\"background-image: url(../../assets/files/IndexView.png); \\r\\n        -webkit-background-size: cover;\\r\\n        -moz-background-size: cover;\\r\\n        -o-background-size: cover;\\r\\n        background-size: 100%;\\r\\n        padding-bottom:18%;\\r\\n        padding-top: 5%;\\r\\n        \\\">\\r\\n        <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer> -->\\r\\n\\r\\n\\r\\n<style>\\r\\n  /* body{\\r\\n  \\r\\n  background-image: url('<%=ORSView.APP_CONTEXT%>/img/201.webp');\\r\\n      background-size: 100%;\\r\\n  \\r\\n  \\r\\n  } */\\r\\n  .cl{\\r\\n    font-family: Lucida Calligraphy; \\r\\n  \\r\\n   /*  font-family: Monotype Corsiva;\\r\\n    \\r\\n   font-family: Footlight MT Light; */\\r\\n    }\\r\\n  </style>\\r\\n<app-navbar></app-navbar>\\r\\n\\r\\n<div>  \\r\\n  <!-- <div class=\\\"img-fluid\\\" style=\\\"background-image: url(../../assets/files/welcomeView2.png); \\r\\n      -webkit-background-size: cover;\\r\\n      -moz-background-size: cover;\\r\\n      -o-background-size: cover;\\r\\n      background-size: 100%;\\r\\n      padding-bottom:18%;\\r\\n      padding-top: 5%;\\r\\n      \\\">\\r\\n      <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n  </div> -->\\r\\n\\r\\n  <div class=\\\"row \\\" style=\\\"padding-bottom: 14%;\\r\\n   background: url(assets/files/background.jpg) no-repeat center center;\\r\\n   \\r\\n  background-attachment: fixed;\\r\\n  background-size: cover; width:cover;\\r\\n    height: 120vh;\\\">\\r\\n    <p class=\\\"text-cs1 font-family ml-4 font-weight-bold\\\" style=\\\"padding-top: 1%; \\r\\n    padding-left: 36%;font-size: 45px; color: rgb(4, 204, 226);\\\">{{'WELCOME TO ORS' | translate}}</p></div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlcGFydG1lbnQvZGVwYXJ0bWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"departmentForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Department' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Department' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageName', 20, '')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Last Employer Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastEmployerName\\\" [(ngModel)]=\\\"form.data.lastEmployerName\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageLastEmployerName', 20, '')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter lastEmployerName' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageLastEmployerName\\\" class=\\\"alertRedColor\\\">{{ errorMessageLastEmployerName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.lastEmployerName\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lastEmployerName }}</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Date of Joining' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter dateOfJoining' | translate }}\\\" required>\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"form.inputerror?.dateOfJoining\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfJoining }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-dollar-sign grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageAmount', 10, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter  Amount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.amount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.amount }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Department Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"departmentName\\\" [(ngModel)]=\\\"form.data.departmentName\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select departmentName' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let color of form.preload.dnameList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.departmentName\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.departmentName }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n  \\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n            \\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/departmentlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-department',\r\n  templateUrl: './department.component.html',\r\n  styleUrls: ['./department.component.css']\r\n})\r\nexport class DepartmentComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.DEPARTMENT, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.departmentName);\r\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\r\n    flag = flag && validator.isNotNullObject(form.amount);\r\n    flag = flag && validator.isNotNullObject(form.lastEmployerName);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.departmentName = data.departmentName;\r\n    form.dateOfJoining = data.dateOfJoining;\r\n    form.amount = data.amount;\r\n    form.lastEmployerName = data.lastEmployerName;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlcGFydG1lbnQvZGVwYXJ0bWVudGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Department List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.searchParams.name\\\" class=\\\"form-control\\\"\\r\\n          (keydown)=\\\"filterInput($event, 'errorMessageName', 20, 'char')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\r\\n            <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        \\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"lastEmployerName\\\" [(ngModel)]=\\\"form.searchParams.lastEmployerName\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageLastEmployerName', 20, 'char')\\\"\\r\\n              placeholder=\\\"{{ 'Enter LastEmployerName' | translate }}\\\">\\r\\n              <span *ngIf=\\\"errorMessageLastEmployerName\\\" class=\\\"alertRedColor\\\">{{ errorMessageLastEmployerName }}</span>\\r\\n          </div>\\r\\n  \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter dateOfJoining' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.searchParams.amount\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageAmount', 10, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Amount' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"departmentName\\\" [(ngModel)]=\\\"form.searchParams.departmentName\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select departmentName' | translate }}</option>\\r\\n            <option *ngFor=\\\"let color of form.preload.dnameList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/department')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add Department' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Name' | translate }}</th>\\r\\n              <th>{{ 'Date of Joining' | translate }}</th>\\r\\n              <th>{{ 'Amount' | translate }}</th>\\r\\n              <th>{{ 'Department Name' | translate }}</th>\\r\\n              <th>{{ 'Last Employer name' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.dateOfJoining | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.amount }}</td>\\r\\n              <td>{{ findSelValueByKey(m.departmentName ,form.preload.dnameList) }}</td>\\r\\n              <td>{{ m.lastEmployerName }}</td>\\r\\n            \\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/department/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/departmentlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/departmentlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          \\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-departmentlist',\r\n  templateUrl: './departmentlist.component.html',\r\n  styleUrls: ['./departmentlist.component.css']\r\n})\r\nexport class DepartmentlistComponent extends BaseListCtl implements OnInit{\r\n\r\n  myKey = \"\";\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {},\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.DEPARTMENT, locator, route);\r\n  }\r\n\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EndpointServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public SERVER_URL = \"http://localhost:8084\";\r\n  public MESSAGE = this.SERVER_URL + \"/Message\";\r\n  public USER = this.SERVER_URL + \"/User\";\r\n  public ROLE = this.SERVER_URL + \"/Role\";\r\n  public COLLEGE = this.SERVER_URL + \"/College\";\r\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\r\n  public STUDENT = this.SERVER_URL + \"/Student\";\r\n  public SUBJECT = this.SERVER_URL+ \"/Subject\";\r\n  public FACULTY = this.SERVER_URL+ \"/Faculty\";\r\n  public COURSE = this.SERVER_URL + \"/Course\";\r\n  public TIMETABLE = this.SERVER_URL+ \"/TimeTable\";\r\n  public JASPERREPORT = this.SERVER_URL+ \"/Jasper\";\r\n \r\n  public ASSET = this.SERVER_URL + \"/Asset\";\r\n  public DEPARTMENT = this.SERVER_URL + \"/Department\";\r\n  public ITEMINFORMATION = this.SERVER_URL + \"/Iteminformation\";\r\n  public STOCKANALYSIS = this.SERVER_URL + \"/StockAnalysis\";\r\n  public CUSTOMER = this.SERVER_URL + \"/Customer\";\r\n  public ABC = this.SERVER_URL + \"/Abc\";\r\n  public RIYA = this.SERVER_URL + \"/Riya\";\r\n  public PORTFOLIO = this.SERVER_URL + \"/Portfolio\";\r\n  public REGION = this.SERVER_URL + \"/Region\";\r\n  public FOLLOWUP = this.SERVER_URL + \"/FollowUp\";\r\n  public CLIENT = this.SERVER_URL + \"/Client\";\r\n  public XYZ = this.SERVER_URL + \"/Xyz\";\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Faculty List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/faculty')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Faculty' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Gender' | translate}}</th>\\r\\n                <th>{{'College' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Mobile' | translate}}</th>\\r\\n                <th>{{'Email' | translate}}</th>\\r\\n                <th>{{'Qualification' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{ m.firstName }} {{m.lastName}} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>{{ m.gender }} </td>\\r\\n                <td>{{m.collegeName}}</td>\\r\\n                <td>{{m.courseName}}</td>\\r\\n                <td>{{m.subjectName}}</td>\\r\\n                <td>{{ m.phoneNo}}</td>\\r\\n                <td>{{m.email}}</td>\\r\\n                <td>{{m.qualification}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/faculty/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash  text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/facultylist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty-list',\r\n  templateUrl: './faculty-list.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Faculty'\\r\\n            | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\r\\n            Faculty' | translate}}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Qualification' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"form.data.qualification\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Your Qualification' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile No' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/facultylist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' |\\r\\n                translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty',\r\n  templateUrl: './faculty.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName)\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName)\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    console.log(form.email)\r\n    flag = flag && validator.isNotNullObject(form.qualification);\r\n    console.log(form.qualification)\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender)\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    console.log(form.phoneNo+\"in validateForm----------------------------\");\r\n    \r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    console.log(form.courseId)\r\n    flag = flag && validator.isNotNullObject(form.collegeId);\r\n    console.log(form.collegeId)\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    console.log(form.subjectId)\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectId = data.subjectId;\r\n    console.log(form.subjectId+'subject--');\r\n    form.collegeId = data.collegeId;\r\n    form.courseId = data.courseId;\r\n    console.log(form.courseId+'course ----');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.email = data.email;\r\n    form.qualification = data.qualification;\r\n    form.gender = data.gender;\r\n    form.dob = data.dob;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log(\"phoneno----------------\"+form.phoneNo);\r\n    \r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <h1 class=\\\"text-primary pt-4\\\">Upload Image Test Page</h1>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container row pl-4\\\">\\r\\n <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUpload()\\\" value=\\\"upload\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<!--   \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n  \\r\\n          <div *ngIf=message>{{message}}</div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"image name\\\" [(ngModel)]=\\\"imageName\\\"\\r\\n  \\r\\n              name=\\\"name\\\" />\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n  \\r\\n          <input type=\\\"button\\\" (click)=\\\"getImage()\\\" value=\\\"Get Image\\\">\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n            <div *ngIf=retrievedImage>\\r\\n  \\r\\n              <img [src]=\\\"retrievedImage\\\">\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-file',\r\n  templateUrl: './file.component.html',\r\n  styleUrls: ['./file.component.css']\r\n})\r\n\r\n  export class FileComponent implements OnInit {\r\n\r\n    ngOnInit() {}\r\n\r\n  \r\n    fileToUpload: File = null;\r\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\r\n\r\n    handleFileInput(files: FileList) {\r\n      this.fileToUpload = files.item(0);\r\n      console.log(this.fileToUpload);\r\n  }\r\n\r\n  onUpload() {\r\n    this.onSubmit(this.fileToUpload).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    \r\n  }\r\n    \r\n    \r\n    onSubmit(fileToUpload: File) {\r\n      const formData = new FormData();\r\n\r\n      formData.append('file', fileToUpload);\r\n      return this.httpClient.post(\"http://localhost:8080/User/profilePic/1\", formData,);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwL2ZvbGxvd3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"followupForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Follow UP' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Follow UP' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            \\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Charges' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"charges\\\" [(ngModel)]=\\\"form.data.charges\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageCharges', 8, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter charges' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageCharges\\\" class=\\\"alertRedColor\\\">{{ errorMessageCharges }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.charges\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.charges }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Start Date Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Appointment Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"appointmentDate\\\" [value]=\\\"form.data.appointmentDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.appointmentDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter appointmentDate' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.appointmentDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.appointmentDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Client' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"client\\\" [(ngModel)]=\\\"form.data.client\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select client' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let leve of form.preload.clientList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.client\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.client }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Physician' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"physician\\\" [(ngModel)]=\\\"form.data.physician\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select physician' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let phy of form.preloadd.physicianList\\\" [value]=\\\"phy.key\\\">{{ phy.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.physician\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.physician }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/followuplist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-followup',\r\n  templateUrl: './followup.component.html',\r\n  styleUrls: ['./followup.component.css']\r\n})\r\nexport class FollowupComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.FOLLOWUP, locator, route);\r\n  }\r\n\r\n\r\n  \r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.client);\r\n    flag = flag && validator.isNotNullObject(form.physician);\r\n    flag = flag && validator.isNotNullObject(form.appointmentDate);\r\n    flag = flag && validator.isNotNullObject(form.charges);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.charges = data.charges;\r\n    form.appointmentDate = data.appointmentDate;\r\n    form.physician = data.physician;\r\n    form.client = data.client;\r\n  }\r\n\r\n  // validateName(event: KeyboardEvent): void {\r\n  //   const inputValue = (event.target as HTMLInputElement).value;\r\n  //   const inputChar = event.key;\r\n  //   const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n  //   if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n  //     event.preventDefault();\r\n  //     this.errorMessageName = 'Only alphabets are allowed.';\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (inputValue.length < 1) {\r\n  //     this.errorMessageName = 'Name must be at least  characters long.';\r\n  //   } else if (inputValue.length > 15) {\r\n  //     this.errorMessageName = 'Name must not exceed 15 characters.';\r\n  //   } else {\r\n  //     this.errorMessageName = '';  // Clear error message if valid\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n  \r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n  \r\n    if (inputValue.length > 15) {\r\n      this.errorMessageName = 'Name must not exceed 15 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwL2ZvbGxvd3VwbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Follow up List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <!-- Search inputs section -->\\r\\n      <div class=\\\"search-inputs row\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"charges\\\" [(ngModel)]=\\\"form.searchParams.charges\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageCharges', 8, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter charges' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageCharges\\\" class=\\\"alertRedColor\\\">{{ errorMessageCharges }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"appointmentDate\\\" [(ngModel)]=\\\"form.searchParams.appointmentDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter appointment Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"client\\\" [(ngModel)]=\\\"form.searchParams.client\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select client' | translate }}</option>\\r\\n            <option *ngFor=\\\"let leve of form.preload.clientList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"physician\\\" [(ngModel)]=\\\"form.searchParams.physician\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select physician' | translate }}</option>\\r\\n            <option *ngFor=\\\"let phy of form.preloadd.physicianList\\\" [value]=\\\"phy.key\\\">{{ phy.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/followup')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add Follow UP' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\"> \\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div> <!-- End of search-inputs -->\\r\\n\\r\\n      <!-- Success/Error messages -->\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <!-- Table section -->\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table -bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Charges' | translate }}</th>\\r\\n              <th>{{ 'Appointment Date' | translate }}</th>\\r\\n              <th>{{ 'Client' | translate }}</th>\\r\\n              <th>{{ 'Physician' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.charges }}</td>\\r\\n              <td>{{ m.appointmentDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ findSelValueByKey(m.client,form.preload.clientList) }}</td>\\r\\n              <td>{{ findSelValueByKey(m.physician,form.preloadd.physicianList) }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/followup/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <!-- Pagination and Reset buttons -->\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/followuplist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/followuplist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div> <!-- End of table-responsive -->\\r\\n    </div> <!-- End of panel -->\\r\\n  </div> <!-- End of container-fluid -->\\r\\n</div> <!-- End of content-wrapper -->\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-followuplist',\r\n  templateUrl: './followuplist.component.html',\r\n  styleUrls: ['./followuplist.component.css']\r\n})\r\nexport class FollowuplistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    preloadd: [],\r\n\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  isValidStartDate: boolean = true;\r\n  startDateErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n\r\n\r\n\r\n    super(locator.endpoints.FOLLOWUP, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string): void {\r\n    const value = event.target.value;\r\n\r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        // Replace non-alphabetic characters\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); \r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n        this.isValidNameInput = false;\r\n      } \r\n      // Restrict input to a maximum length of 15 characters\r\n      else if (value.length > 15) {\r\n        // Trim the input to 15 characters\r\n        event.target.value = value.substring(0, 15); \r\n        this.nameErrorMessage = 'Name cannot exceed 15 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // Clear error message if input is valid\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n\r\n  validateDate(event: any) {\r\n    const selectedDate = new Date(event.target.value);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set today's time to midnight to compare only the date\r\n\r\n    if (selectedDate > today) {\r\n      // If selected date is in the future\r\n      this.startDateErrorMessage = 'Please enter a past date';\r\n      this.isValidStartDate = false;\r\n    } else {\r\n      // If selected date is valid (past or today)\r\n      this.startDateErrorMessage = ''; // Clear error message\r\n      this.isValidStartDate = true;\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","module.exports = \"footer{\\r\\n    position: fixed;\\r\\n    \\r\\n    bottom: 0px;\\r\\n    height: 40px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlcntcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIFxyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<footer class=\\\"text-center \\\"\\r\\n style=\\\"background: linear-gradient(to bottom right,#00008B, rgb(219, 231, 237));\\\">\\r\\n  <!-- Copyright -->\\r\\n  <div class=\\\"text-center pt-2 pb-2 text-light\\\" >\\r\\n    &copy; {{'COPYRIGHT' | translate}}\\r\\n    <a class=\\\"text-light\\\" href=\\\"\\\">{{'NCS PVT. LTD' | translate}}</a>\\r\\n  </div>\\r\\n  <!-- Copyright -->\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router'\r\n\r\n\r\n@Injectable()\r\n\r\nexport class HttpServiceService {\r\n\r\n\r\n\r\n  form = {\r\n    message: '',\r\n    error: false\r\n  };\r\n\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  constructor(private router: Router, private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  get(endpoint, callback){\r\n\r\n    return this.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\r\n      console.log('Data :: ' + data);\r\n      callback(data);\r\n\r\n    }, error => {\r\n      console.log('ORS Error--', error);\r\n      if (error.status === 401) {\r\n\r\n        localStorage.clear();\r\n        this.userparams.url = this.router.url;\r\n        console.log('URL :: ' + this.router.url);\r\n        this.router.navigate(['/login'], {\r\n          queryParams: { errorMessage: error.error.error },\r\n        })\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  post(endpoint, bean, callback) {\r\n    return this.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\r\n      console.log(data);\r\n      callback(data);\r\n\r\n    }, error => {\r\n      console.log('ORS Error--', error);\r\n      if (error.status === 401) {\r\n        localStorage.clear();\r\n        this.router.navigate(['/login'], {\r\n          queryParams: { errorMessage: error.error.error },\r\n        })\r\n      }\r\n    }); ``\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div id=\\\"loader\\\">\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"loading\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <p class=\\\"spinner-message\\\" *ngIf=\\\"message && message !== ''\\\">\\r\\n      {{message}}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar ></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  } \\r\\n  \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    \\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form #loginForm=\\\"ngForm\\\">\\r\\n          \\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Forgot Password' | translate}}</h1>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error == false && form.message == 'Password has been sent to email id'\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <button (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Reset My Password' | translate}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  \\r\\n</div>\\r\\n  </div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgotpassword.component.html'\r\n})\r\n\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8084/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: \"\",\r\n    loginId: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n\r\n\r\n  validate(){\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.get(_self.endpoint + \"/fp/\"+ this.form.loginId ,function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n          console.log(res.result.message+'------>msg');\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n        console.log(_self.form.message+'-------> msg in sucess');\r\n      \r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n      console.log(_self.form.error + '-----------> msg in self.form.error in res');\r\n\r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.inputerror = res.result.inputerror;\r\n          console.log(_self.inputerror + '-----------> msg in self.form.error');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZDs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtHQUNUOzs7QUFFQTtJQUNDLFlBQVk7R0FDYjs7O0FBRUE7SUFDQyxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0UmVkQ29sb3Ige1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuXHJcbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIgeyBcdFx0XHJcbiAgY29udGVudDogXCIqXCI7XHRcdFxyXG4gIGNvbG9yOiByZWQ7XHRcdFxyXG4gICB9XHRcclxuXHJcbiAgIC5zdWNjZXNzQ29sb3J7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbiAgIH1cclxuXHJcbiAgIC5idG4tc3BhY2Uge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<app-navbar #one></app-navbar>\\r\\n<style>\\r\\n  #nnn{\\r\\n    background: none;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  </style>\\r\\n  \\r\\n  \\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%; \\r\\n  }\\r\\n  \\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n    \\r\\n  }\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, #00008B, rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n    \\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 8%; padding-bottom: 8%;\\r\\nbackground: url(assets/files/211.jpg) no-repeat center center;\\r\\n   background-attachment: fixed;\\r\\nbackground-size: 225vh;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card input-group-addon grad\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h1 class=\\\"text-primary font-weight-bold\\\">{{'Login' | translate}}</h1>\\r\\n          </div>\\r\\n          <input type=\\\"hidden\\\" name=\\\"log\\r\\n          inUrl\\\" [(ngModel)]=\\\"form.loginUrl\\\" class=\\\"form-control\\\">\\r\\n          <div *ngIf=\\\"form.error && form.message == 'Invalid ID or Password'\\\"\\r\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'Invalid ID or Password' | translate}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error==false && form.message == 'Logout Successfully'\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'Log out successfully' | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.message == 'OOPS! Your session has been expired'\\\"\\r\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'OOPS! Your session has been expired' | translate}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n           <span  *ngIf=\\\"inputerror.loginId != null\\\"\\r\\n          class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'loginId'| translate}} </span> \\r\\n          </div>\\r\\n           <!-- <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>  -->\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span> \\r\\n\\r\\n            <!-- <span class=\\\"alertRedColor\\\">{{inputerror.password}}</span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <button (click)=\\\"signIn()\\\" class=\\\"btn btn-md btn-success\\\">\\r\\n                {{'Sign in' | translate}}</button>\\r\\n            </div>\\r\\n            &nbsp;&nbsp;&nbsp;\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8084/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: '',\r\n    loginId: '',\r\n    password: '',\r\n    loginUrl: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router,\r\n    private cookieService: CookieService, private route: ActivatedRoute, private serviceLocator: ServiceLocatorService) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  this.route.queryParams.subscribe((params) =>{\r\n    this.form.message = params['errorMessage'] || null;\r\n    console.log(\"mas>>>>>>>>>>>>>>>gg.>>\",this.form.message);\r\n    })\r\n    //this.userSessionCheck();\r\n    if (this.httpService.form.error == true) {\r\n      this.form.message = this.httpService.form.message;\r\n      this.form.error = this.httpService.form.error;\r\n    }\r\n    var a = '';\r\n    this.serviceLocator.getPathVariable(this.route, function (params) {\r\n      a = params[\"userparams\"];\r\n      console.log('I GOT ID, its logout', a);\r\n    })\r\n    if (a == 'true') {\r\n      this.form.message = 'Logout Successfully';\r\n    }\r\n  }\r\n\r\n  userSessionCheck() {\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      //  this.userList = params.get('userparams');    \r\n      //  this.userparams=JSON.parse(this.route.snapshot.paramMap.get('userparams'));\r\n\r\n      this.userparams = JSON.parse(this.route.snapshot.queryParamMap.get('userparams'));\r\n      if (this.userparams != null) {\r\n        this.form.message = this.userparams.sessionExpiredMsg;\r\n        this.form.loginUrl = this.userparams.url;\r\n        //  console.log('URL-----------------------' + this.userparams.url);\r\n        //  console.log('Message-----------------------' + this.userparams.sessionExpiredMsg);\r\n        //  console.log('Method Type-----------------------' + this.userparams.methodType);\r\n      }\r\n\r\n    });\r\n    if (this.form.message != null) {\r\n      this.form.error = true;\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\r\n    console.log(this.form.loginId);\r\n    flag = flag && this.dataValidator.isNotNull(this.form.password);\r\n    console.log(this.form.password);\r\n    return flag;\r\n  }\r\n\r\n\r\n  signIn() {\r\n\r\n    var _self = this;\r\n    this.form.error = false;\r\n    const requestedUrl = this.httpService.userparams.url;//to get the URI\r\n    console.log('signIn----', this.form);\r\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n      //_self.form.loginId = res.result.loginId;\r\n      if (_self.dataValidator.isNotNullObject(res.result.message)) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n\r\n      if (_self.dataValidator.isNotNullObject(res.result.inputerror)) {\r\n        _self.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if (_self.dataValidator.isTrue(res.success)) {\r\n\r\n    \r\n        localStorage.setItem(\"loginId\", res.result.loginId);\r\n       \r\n        localStorage.setItem(\"role\", res.result.role);\r\n        localStorage.setItem(\"fname\", res.result.fname);\r\n        localStorage.setItem(\"lname\", res.result.lname);\r\n        localStorage.setItem(\"userid\", res.result.data.id);\r\n      \r\n        //   console.log(res.result.data.id + 'sessionId set ----');\r\n        //   console.log(res.result.token + '  Token set ----');\r\n\r\n\r\n        if (requestedUrl != null && requestedUrl != '') {\r\n          _self.router.navigateByUrl(requestedUrl);\r\n\r\n          \r\n        } else {\r\n          _self.router.navigateByUrl('/dashboard');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n   .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 25px\\r\\n  ;\\r\\n  }\\r\\n \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\" padding-top: 4%;\\r\\n padding-bottom:0%;background-image: url(../../assets/files/wall.jpg);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: 100%;\\r\\n  height: 120vh;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n         <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h3 class=\\\"text-primary font-weight-bold\\\">\\r\\n              {{'Sign Up' | translate}}\\r\\n            </h3>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null && form.message.length>0\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.firstName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.lastName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Login id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.login != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'email'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.login}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{password | translate}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"form.inputerror.phone != null\\\"\\r\\n              class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'phone'| translate}} </span>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.alternateMobile != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'mobile'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.phone}} </span> \\r\\n          <!-- </div>  -->\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.dob != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'dob'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.gender != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'gender'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n\\r\\n\\r\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Sign up' | translate}}</button>\\r\\n            </div>\\r\\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <!-- <a class=\\\"btn btn-warning mr-1\\\"[routerLink]=\\\"['/signup']\\\" (click)=\\\"exit()\\\">{{'Reset' | translate}}</a> -->\\r\\n               <button (click)=\\\"exit()\\\" class=\\\"btn btn-warning mr-1\\\">{{'Reset' | translate}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport {ServiceLocatorService} from '../service-locator.service';\r\nimport { format } from 'url';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n\r\n\r\n  endpoint = \"http://localhost:8084/Auth/signUp\";\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: '', //error or success message\r\n    data: { id: null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    \r\n  };\r\n  \r\n\r\n  \r\n\r\n  constructor(private serviceLocator:ServiceLocatorService, private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form);\r\n  }\r\n\r\n  /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n  \r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n \r\n    flag = flag && validator.isNotNullObject(form.loginId);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.password);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n  \r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    return flag;\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  exit(){ \r\n   \r\n    location.reload();\r\n  }\r\n\r\n  reset(){\r\n    this.router.navigate(['/signup']);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.post(this.endpoint, this.form.data,function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n      if (_self.form.error && res.result.inputerror) {\r\n    \r\n        _self.form.inputerror = res.result.inputerror;\r\n\r\n          \r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div  style=\\\"\\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;\\r\\npadding-top: 5%;\\r\\npadding-bottom: 24%;\\r\\nwidth:100%;\\r\\n  height: 100;\\\">\\r\\n  <form name=\\\"rollForm\\\" (ngSubmit)=\\\"go()\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n      <div style=\\\"font-size: 80px;\\\">\\r\\n      <p class=\\\"font-weight-bold text-primary\\\">{{'Get Marksheet' | translate }}</p>\\r\\n    </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pt-4 pb-4\\\">\\r\\n      <div class=\\\"col-sm-4 \\\"></div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.data.rollNo\\\"\\r\\n          placeholder=\\\"{{'Enter Roll Number' | translate }}\\\">&emsp;</div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n          {{'Search' | translate }}</button>\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/getmarksheet']\\\"> {{'Reset' | translate}} </a>\\r\\n        \\r\\n        &emsp;\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-sm-3 col-xs-3\\\"></div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"form.list.rollNo!= null\\\" >\\r\\n\\r\\n    <table width=\\\"100%\\\" class=\\\"table table-bordered table-striped table-hover\\\" border=\\\"3px\\\">\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'RollNO' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.rollNo}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Name' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.name}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Marks' | translate }}</th>\\r\\n        <th align=\\\"center\\\" id=\\\"po1\\\">{{'Max Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Min Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Marks Obtain' | translate }}</th>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Subject' | translate }}</th>\\r\\n        \\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Physics' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.physics}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.physics >35) ? 'green': 'red' }\\\">{{form.list.physics}}</span>\\r\\n          \\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Chemistry' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.chemistry}}*</span>  -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.chemistry >35) ? 'green': 'red' }\\\">{{form.list.chemistry}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Maths' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.maths}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.maths >35) ? 'green': 'red' }\\\">{{form.list.maths}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Total' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">{{form.list.maths+form.list.physics+form.list.chemistry}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Percentage' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">\\r\\n          {{((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 | number:'2.0-2' }}%\\r\\n        \\r\\n          \\r\\n        \\r\\n        \\r\\n        </td>\\r\\n      </tr>\\r\\n     <!--  <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Grade' | translate }}</font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"green\\\"><b>{{'PASS' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n\\r\\n      <!-- <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>\\r\\n          <font color=\\\"red\\\"><b>F</b></font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"red\\\"><b>{{'FAIL' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>         \\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\"  *ngIf=\\\"((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 > 35; else elseBlock\\\">\\r\\n\\r\\n          <font color=\\\"green\\\"><b>{{'Pass' | translate }}</b></font>\\r\\n        </td>\\r\\n        <ng-template #elseBlock><td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\" ><font color=\\\"red\\\"><b>{{'Fail' | translate }}</b></font></td></ng-template>\\r\\n      </tr>\\r\\n\\r\\n    </table>\\r\\n    \\r\\n</div><div style=\\\"position: relative; clear: both;\\\">\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\nimport { NgForm} from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-getmarksheet',\r\n  templateUrl: './getmarksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class GetmarksheetComponent extends BaseCtl{\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null,rollNo : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n   \r\n  };\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    return flag;\r\n  }\r\n  \r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.rollNo = data.rollNo;\r\n  \r\n  }\r\n  \r\n  go(){\r\n    var _self = this;\r\n    console.log(\"onClickSubmit\");\r\n    console.log(this.form.data);\r\n    console.log(this.form.data.rollNo);\r\n    \r\n    \r\n    this.httpservice.get(\"http://localhost:8084/Marksheet/rollno/\"+this.form.data.rollNo,function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.data;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 8%; \\r\\nbackground: url(assets/files/teahub.png) no-repeat center center;\\r\\nbackground-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-6 p-1 text-center\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Marksheet List' | translate}}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row  pt-4 pb-4 \\\" style=\\\"margin-left:15%\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name'| translate}}\\\">\\r\\n        </div>\\r\\n      \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Roll No' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.marksheetList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search'| translate}}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/marksheet')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Marksheet'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'RollNO'| translate}}</th>\\r\\n                <th>{{'Name'| translate}}</th>\\r\\n                <th>{{'Physics'| translate}}</th>\\r\\n                <th>{{'Chemistry'| translate}}</th>\\r\\n                <th>{{'Maths'| translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <!-- <td> <input type=\\\"checkbox\\\" name=\\\"list_name\\\" value=\\\"{{isMasterSel}}\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"isAllSelected()\\\"/>\\r\\n                  </td> -->\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\r\\n                    value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                \\r\\n\\r\\n                <td> {{ m.rollNo }} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.physics }} </td>\\r\\n                <td> {{ m.chemistry }} </td>\\r\\n                <td> {{ m.maths }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/marksheet/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n\\r\\n                  <!-- <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <table style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\r\\n              [routerLink]=\\\"['/marksheetlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                translate }}</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-marksheet-list',\r\n  templateUrl: './marksheet-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\n  \r\ncreateImageFromBlob(image: Blob) {\r\n  let reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => {\r\n     this.imageToShow = reader.result;\r\n  \r\n  }, false);\r\n\r\n  if (image) {\r\n     reader.readAsDataURL(image);\r\n  }\r\n}\r\n\r\n public form = {\r\n\r\n   error: false, //error \r\n   message: null, //error or success message\r\n   preload: [], // preload data\r\n   data: { id: null}, //form data\r\n   inputerror: {}, // form input error messages\r\n   searchParams: {}, //search form\r\n   searchMessage: null, //search result message\r\n   list: [ ], // search list \r\n   pageNo: 0\r\n };\r\n\r\n\r\n selectedFile: File;\r\n retrievedImage: any;\r\n base64Data: any;\r\n retrieveResonse: any;\r\n message: string;\r\n imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n  }\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8084/Marksheet/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFya3NoZWV0L21hcmtzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixVQUFVO0dBQ1Q7OztBQUVBO0lBQ0MsWUFBWTtHQUNiOzs7QUFFQTtJQUNDLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcblxyXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxyXG4gIGNvbnRlbnQ6IFwiKlwiO1x0XHRcclxuICBjb2xvcjogcmVkO1x0XHRcclxuICAgfVx0XHJcblxyXG4gICAuc3VjY2Vzc0NvbG9ye1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICB9XHJcblxyXG4gICAuYnRuLXNwYWNlIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59Il19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Marksheet' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Marksheet' | translate}}</h2>\\r\\n          \\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Roll No' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"rollNo\\\" [(ngModel)]=\\\"form.data.rollNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Roll No' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.rollNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Student' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n\\r\\n                <select class=\\\"form-control\\\" required name=\\\"studentId\\\"\\r\\n                  [(ngModel)]=\\\"form.data.studentId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Student' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.studentList\\\" [value]=\\\"obj.id\\\">{{obj.firstName + ' ' +obj.lastName }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.studentId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Physics' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phy\\\" [(ngModel)]=\\\"form.data.physics\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Physics Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.physics}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Chemistry' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"chemistry\\\" [(ngModel)]=\\\"form.data.chemistry\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Chemistry Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.chemistry}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Maths' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n                <input type=\\\"text\\\" name=\\\"math\\\" [(ngModel)]=\\\"form.data.maths\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Maths Marks'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.maths}} </span>\\r\\n          </div>\\r\\n         \\r\\n         \\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update'| translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/marksheetlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'Back'| translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-marksheet',\r\n  templateUrl: './marksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  marksheetForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n \r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute , private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.data.id = res.result.data;\r\n      if (_self.fileToUpload) {\r\n        console.log('Dheeraj');\r\n        _self.myFile();\r\n      }\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Dheeraj----------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n\r\n  onUpload(marksheetform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  myFile() {\r\n    console.log(this.form.data.id + 'after super.submit-----');\r\n    this.onSubmitProfile(this.fileToUpload, this.marksheetForm).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitProfile(fileToUpload: File,marksheetform: FormGroup) {\r\n    const formData = new FormData();\r\n    let phone = null;\r\n    formData.append('file', fileToUpload);\r\n    console.log(this.form.data.id + 'this id number ======');\r\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\r\n  }\r\n\r\n  validate() { \r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    console.log('Student name :: ' + form.name);\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.physics);\r\n    flag = flag && validator.isNotNullObject(form.chemistry);\r\n    flag = flag && validator.isNotNullObject(form.maths);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.studentId =data.studentId;\r\n    form.rollNo = data.rollNo;\r\n    form.physics = data.physics;\r\n    form.chemistry = data.chemistry;\r\n    form.maths = data.maths;\r\n    form.imageId = data.imageId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 1%;padding-bottom: 1%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-12 pt-3\\\"> \\r\\n          <h3 class=\\\"text-primary text-center font-weight-bold\\\">{{'Marksheet Merit List' | translate}}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n       <div style=\\\"margin-left: 87%;\\\" class=\\\"pb-2\\\">\\r\\n\\r\\n        <a href=\\\"http://localhost:8084/Jasper/report\\\" class=\\\"btn btn-lg btn-primary \\\" role=\\\"button\\\"  target=\\\"blank\\\">\\r\\n          <span class=\\\"fa fa-print mr-1\\\"></span>{{'Print' | translate}}</a>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold grad\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n              <th >{{'S.No' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'RollNO' | translate}}  </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Name' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Physics' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Chemistry' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Maths' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Total' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Percentage(%)' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let m of form.list; let i = index\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.rollNo}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.name}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.physics}}</td>\\r\\n              <td> {{m.chemistry}}</td>\\r\\n              <td> {{m.maths}}</td>\\r\\n              <td>{{m.physics+m.maths+m.chemistry}}</td>\\r\\n              <td>{{((m.physics+m.maths+m.chemistry)*100)/300 | number:'2.0-2' }}%</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </tbody>\\r\\n          </table>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer>\\r\\n  \\r\\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-marksheetmerit-list',\r\n  templateUrl: './marksheetmerit-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetmeritListComponent extends BaseCtl{\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.getMeritList();\r\n  }\r\n\r\n  getMeritList(){\r\n    var _self = this;\r\n  \r\n    this.httpservice.get(\"http://localhost:8084/Marksheet/meritlist\",function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.list;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg); background-repeat: no-repeat, repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-6 p-1\\\">\\r\\n          <h4 class=\\\"text-primary font-weight-bold\\\">{{'Message List' | translate}}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subject\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.body\\\"\\r\\n            placeholder=\\\"{{'Search Body' | translate}}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate}}</button></div>\\r\\n        <div class=\\\"col=sm-1\\\">\\r\\n          <button (click)=\\\"forward('/message')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Message'| translate}}\\r\\n          </button></div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"next()\\\" class=\\\"btn btn-info\\\">{{'Next'| translate}} </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'Code'| translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Body'| translate}}</th>\\r\\n                <th>{{'Type'| translate}}</th>\\r\\n                <th>{{'Status'| translate}}</th>\\r\\n                <th>#</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.code }} </td>\\r\\n                <td> {{ m.subject }} </td>\\r\\n                <td> {{ m.body }} </td>\\r\\n                <td> {{ m.type }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/message/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message-list',\r\n  templateUrl: './message-list.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Message' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Message' | translate}} </h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Type' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comment grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"form.data.type\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Type' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.type}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Code' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-commenting grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"code\\\" id=\\\"code\\\" [(ngModel)]=\\\"form.data.code\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option selected=\\\"true\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"U-FP\\\">U-FP </option>\\r\\n                  <option value=\\\"U-REG\\\">U-REG </option>\\r\\n                  <option value=\\\"U-CP\\\">U-CP</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.code}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comments grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"form.data.subject\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Subject'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Body' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"form.data.body\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Body' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.body}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Status' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'HTML' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"html\\\" [(ngModel)]=\\\"form.data.html\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message HTML' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.html}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/messagelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.type);\r\n    flag = flag && validator.isNotNullObject(form.code);\r\n    flag = flag && validator.isNotNullObject(form.subject);\r\n    flag = flag && validator.isNotNullObject(form.body);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.code = data.code;\r\n    form.type = data.type;\r\n    form.subject = data.subject;\r\n    form.body = data.body;\r\n    form.status = data.status;\r\n    form.html = data.html;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"navbar{\\r\\n    position: fixed;\\r\\n    top: 0px;\\r\\n    height: 40px;\\r\\n    width: 100%;\\r\\n    z-index: 1000;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFFBQVE7SUFDUixZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXZiYXJ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxufSJdfQ== */\"","module.exports = \"<style type=\\\"text/css\\\">\\r\\n  .Suraj{\\r\\n  background-image : linear-gradient(to bottom right, #00008B, rgb(219, 231, 237));}\\r\\n\\r\\n  .c1{\\r\\ncolor: rgb(235, 6, 6);\\r\\n  }\\r\\n  </style>\\r\\n\\r\\n<div class=\\\"header\\\">\\r\\n  <nav *ngIf=\\\"!isLogin()\\\" class=\\\"navbar navbar-expand-lg Suraj\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n        <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\r\\n        <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\r\\n      </a>  \\r\\n    </div>\\r\\n    <select #locale (change)='changeLocale(locale.value)'class=\\\"c1\\\" >\\r\\n       <option value=\\\"en\\\">{{'Select Language' | translate }}</option> \\r\\n      \\r\\n      <option value=\\\"en\\\" style=\\\"color: red;\\\">English</option>\\r\\n      <option value=\\\"hi\\\"style=\\\"color: red;\\\">{{'Hindi' | translate }}</option>\\r\\n    </select>\\r\\n\\r\\n\\r\\n    <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\" style=\\\"font-size: 15px;\\\">\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"padding-right: 6.5%;\\\">\\r\\n        \\r\\n        <li class=\\\"nav-item dropdown\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['myNav']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\"\\r\\n            data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            <font style=\\\"color: white;\\\">{{'Hi,Guest'| translate}}\\r\\n            </font>\\r\\n          </a>\\r\\n\\r\\n          <div class=\\\"dropdown-menu\\\" id=\\\"myNav\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; &nbsp; {{'Log in' | translate}}</a>\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/signup']\\\"><i class=\\\" fa fa-users\\\"></i> &nbsp; {{'User Registration' |\\r\\n              translate}}</a>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li>\\r\\n\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  \\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n\\r\\n<nav *ngIf=\\\"isLogin()\\\" class=\\\"navbar navbar-expand-lg Suraj\\\">\\r\\n\\r\\n  <div class=\\\"logo\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n      <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\r\\n      <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- <strong class=\\\"text-white\\\">NCS Pvt Ltd</strong> -->\\r\\n\\r\\n\\r\\n  <select #locale (click)='changeLocale(locale.value)'>\\r\\n     <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\r\\n    <option value=\\\"en\\\">English</option>\\r\\n    <option value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\r\\n  </select>\\r\\n\\r\\n\\r\\n  <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n    aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n\\r\\n\\r\\n\\r\\n    <ul class=\\\"nav navbar-nav pl-2 \\\">\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add User' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'User List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Marksheet' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheet']\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp; {{'Add Marksheet' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetlist']\\\"><i class=\\\"fa fa-paste\\\"></i> &nbsp;\\r\\n            {{'Marksheet List' | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetmeritlist']\\\"><i\\r\\n              class=\\\" fa fa-list\\\"></i> &nbsp; {{'Marksheet Merit List' | translate}} </a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/getmarksheet']\\\"><i class=\\\"fa fa-copy\\\"></i> &nbsp; {{'Get Marksheet' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Role' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/role']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add Role' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/rolelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Role List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'College' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/college']\\\"><i class=\\\"fa fa-university\\\"></i> &nbsp; {{'Add College' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/collegelist']\\\"><i class=\\\"fa fa-building\\\"></i> &nbsp;\\r\\n            {{'College List' | translate}} </a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Course' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/course']\\\"><i class=\\\"fa fa-book\\\"></i> &nbsp; {{'Add Course' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/courselist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{'Course List'\\r\\n            | translate}} </a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Student' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/student']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Student' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/studentlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Student\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Faculty' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/faculty']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Faculty' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/facultylist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp; {{'Faculty\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'TimeTable' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetable']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add TimeTable'\\r\\n            | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetablelist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n            {{'TimeTable List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <!-- <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n        id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" a\\r\\n        ria-expanded=\\\"false\\\">\\r\\n        <font style=\\\"color: white;\\\">{{'customer' | translate}}</font>\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customer']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add Customer'\\r\\n          | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customerlist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n          {{'customer List' | translate}}</a>\\r\\n      </div>\\r\\n    </li>\\r\\n    -->\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Subject' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subject']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add Subject' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subjectlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; {{'Subject\\r\\n            List' | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n       <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Asset' | translate }}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/asset']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Asset' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/assetlist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Asset List' | translate }}</a>\\r\\n        </div>\\r\\n      </li> \\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Client' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/client']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Client' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientlist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Client List' | translate }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Xyz' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/xyz']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Xyz' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/xyzlist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Xyz List' | translate }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <!-- <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Stock analysis' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/stockanalysis']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Stock analysis' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/stockanalysislist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Stock analysis List' | translate }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Portfolio' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/portfolio']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Portfolio' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/portfoliolist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Portfolio List' | translate }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Region' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/region']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Region' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/regionlist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Region List' | translate }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n      \\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{ 'Follow UP' | translate }}</font>\\r\\n        </a>\\r\\n        \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/followup']\\\"><i class=\\\"fa fa-plus\\\"></i> &nbsp; {{ 'Add Follow UP' | translate }}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/followuplist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{ 'Follow UP List' | translate }}</a>\\r\\n        </div>\\r\\n      </li> -->\\r\\n      \\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{form.data.fname }} ({{form.data.role}})\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"forward()\\\"><i class=\\\" fa fa-user-md\\\"></i> &nbsp; {{'My Profile' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/changepassword']\\\"><i class=\\\" fa fa-key\\\"></i> &nbsp; {{'Change Password' |\\r\\n            translate}}</a>\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"\\\" (click)=\\\"goToLink()\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp;{{'Java Doc' | translate}}</a>\\r\\n            \\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\" fa fa-lock\\\"></i> &nbsp;&nbsp;{{'Log Out' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { HttpServiceService} from '../http-service.service';\r\nimport { ServiceLocatorService} from '../service-locator.service';\r\n\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { HttpClient} from '@angular/common/http'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  loginId: string;\r\n  userid : string;\r\n \r\n  constructor(private translate: TranslateService, private route : ActivatedRoute, private httpService : HttpServiceService,private myservice: HttpClient ,private servicelocator : ServiceLocatorService) { \r\n\r\n    console.log('DefaultLang ' + localStorage.getItem(\"locale\"));\r\n    if(localStorage.getItem(\"locale\")!=null){\r\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\r\n    }else{\r\n      translate.setDefaultLang(\"en\"); \r\n    }\r\n   \r\n  }\r\n\r\n  changeLocale(locale:string){\r\n    localStorage.setItem(\"locale\",locale);\r\n    this.translate.use(localStorage.getItem(\"locale\"));\r\n     console.log('Locale ' + locale);\r\n   }\r\n\r\n   public form = {\r\n\r\n    error: false, //error   \r\n    message: null, //error or success message\r\n    firstName : null,\r\n    data: { id: null, fname: null, lname : null, role: null, loginId : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n  \r\n  };\r\n  ngOnInit() {\r\n    // var _self = this;\r\n    // this.httpService.get(\"http://localhost:8080/Auth/menu\",function (res){\r\n      \r\n    //   if(res.success){\r\n    //     _self.form.list = res.result.list;\r\n      \r\n    //   }else{\r\n    //     _self.form.error = false;\r\n    //     _self.form.message = res.result.message;\r\n    //   }\r\n    //   console.log('FORM', _self.form);\r\n    // });\r\n  }\r\n\r\n  forward(){\r\n    this.userid = localStorage.getItem(\"userid\");\r\n    console.log('UID---' + this.userid)\r\n    \r\n    this.servicelocator.forward(\"/user/\"+this.userid);\r\n   \r\n  }\r\n  isLogin() {\r\n    let check = localStorage.getItem('fname');\r\n    if (check != \"null\" && check != null) {\r\n      this.form.data.fname = localStorage.getItem(\"fname\");\r\n      this.form.data.lname = localStorage.getItem(\"lname\");\r\n      this.form.data.loginId = localStorage.getItem(\"loginId\");\r\n      this.form.data.role = localStorage.getItem(\"role\"); \r\n\r\n\r\n     // console.log('fname is ---->>>' + this.form.data.fname);\r\n      return true;\r\n    } else {\r\n      return false;\r\n  }\r\n  }\r\n  goToLink() {\r\n    window.open('assets/doc/index.html', '_blank');\r\n  }\r\n  logout() {\r\n    var _self = this;\r\n\r\n    console.log('Logout', this.form);\r\n\r\n    // let url = this.servicelocator.endpoints.getEndpoint(this.servicelocator.endpoints.AUTH, \"logout\");\r\n\r\n    // this.servicelocator.httpService.post(url, this.form, function (res, error) {\r\n\r\n    //   if (error) {\r\n    //     alert(error);\r\n    //     return;\r\n    //   }\r\n    //   _self.loginId = \"null\";\r\n    //   localStorage.removeItem(\"token\");\r\n    //   localStorage.removeItem(\"fname\");\r\n    //   localStorage.removeItem(\"lname\");\r\n    //   localStorage.removeItem(\"loginId\");\r\n    //   localStorage.removeItem(\"role\")\r\n\r\n\r\n\r\n    //   console.log('After logout jsessionid---' +localStorage.getItem(\"JSESSIONID\") + \"  logout Pushpendra Singh Kushwah\");\r\n    \r\n\r\n      \r\n    //   this.form.message = \"Logout Successfully\";\r\n    //   console.log(this.form.message);\r\n    //  _self.servicelocator.router.navigateByUrl('/login/true');\r\n       _self.httpService.get(\"http://localhost:8084/Auth/logout\",function (res){\r\n      _self.servicelocator.router.navigateByUrl('/login/true');\r\n        if(res.success){\r\n          localStorage.clear();\r\n          _self.form.message = res.result.message;\r\n      //     _self.form.list = res.result.data;\r\n      //     localStorage.removeItem(\"JSESSIONID\");\r\n      //     _self.servicelocator.router.navigateByUrl('/login');\r\n      //     if(_self.form.list.length == 0){\r\n      //       _self.form.message = \"No record found\";\r\n      //       _self.form.error = true;\r\n      //     }\r\n      //     console.log(\"List Size\",_self.form.list.length );\r\n      //   }else{\r\n      //     _self.form.error = false;\r\n      //     _self.form.message = res.result.message;\r\n      //   }\r\n      //   console.log('FORM', _self.form);\r\n      };\r\n\r\n    });\r\n\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcnRmb2xpby9wb3J0Zm9saW8uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"portfolioForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Portfolio' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Portfolio' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <!-- Name Field with Validation -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageAmount', 8, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter amount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.amount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.amount }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Start Date Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Level' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"level\\\" [(ngModel)]=\\\"form.data.level\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select level' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let leve of form.preload.levelList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.level\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.level }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/portfoliolist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-portfolio',\r\n  templateUrl: './portfolio.component.html',\r\n  styleUrls: ['./portfolio.component.css']\r\n})\r\nexport class PortfolioComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.PORTFOLIO, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.level);\r\n    flag = flag && validator.isNotNullObject(form.startDate);\r\n    flag = flag && validator.isNotNullObject(form.amount);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.level = data.level;\r\n    form.startDate = data.startDate;\r\n    form.amount = data.amount;\r\n  }\r\n\r\n  // validateName(event: KeyboardEvent): void {\r\n  //   const inputValue = (event.target as HTMLInputElement).value;\r\n  //   const inputChar = event.key;\r\n  //   const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n  //   if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n  //     event.preventDefault();\r\n  //     this.errorMessageName = 'Only alphabets are allowed.';\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (inputValue.length < 1) {\r\n  //     this.errorMessageName = 'Name must be at least  characters long.';\r\n  //   } else if (inputValue.length > 15) {\r\n  //     this.errorMessageName = 'Name must not exceed 15 characters.';\r\n  //   } else {\r\n  //     this.errorMessageName = '';  // Clear error message if valid\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z\\s]*$/;\r\n  \r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n  \r\n    if (inputValue.length > 15) {\r\n      this.errorMessageName = 'Name must not exceed 15 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcnRmb2xpby9wb3J0Zm9saW9saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Portfolio List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search  Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.searchParams.amount\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageAmount', 8, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Amount' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" (change)=\\\"validateDate($event)\\\">\\r\\n          <div *ngIf=\\\"!isValidStartDate\\\" class=\\\"text-danger\\\">\\r\\n            {{ startDateErrorMessage }}\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"level\\\" [(ngModel)]=\\\"form.searchParams.level\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select level' | translate }}</option>\\r\\n            <option *ngFor=\\\"let leve of form.preload.levelList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/customer')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add customer' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Name' | translate }}</th>\\r\\n              <th>{{ 'Start Date' | translate }}</th>\\r\\n              <th>{{ 'Amount' | translate }}</th>\\r\\n              <th>{{ 'Level' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.startDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.amount }}</td>\\r\\n              <td>{{ findSelValueByKey(m.level,form.preload.levelList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/portfolio/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/portfoliolist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/portfoliolist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-portfoliolist',\r\n  templateUrl: './portfoliolist.component.html',\r\n  styleUrls: ['./portfoliolist.component.css']\r\n})\r\nexport class PortfoliolistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  isValidStartDate: boolean = true;\r\n  startDateErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n\r\n    super(locator.endpoints.PORTFOLIO, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string): void {\r\n    const value = event.target.value;\r\n\r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        // Replace non-alphabetic characters\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); \r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n        this.isValidNameInput = false;\r\n      } \r\n      // Restrict input to a maximum length of 15 characters\r\n      else if (value.length > 15) {\r\n        // Trim the input to 15 characters\r\n        event.target.value = value.substring(0, 15); \r\n        this.nameErrorMessage = 'Name cannot exceed 15 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // Clear error message if input is valid\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n\r\n  validateDate(event: any) {\r\n    const selectedDate = new Date(event.target.value);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set today's time to midnight to compare only the date\r\n\r\n    if (selectedDate > today) {\r\n      // If selected date is in the future\r\n      this.startDateErrorMessage = 'Please enter a past date';\r\n      this.isValidStartDate = false;\r\n    } else {\r\n      // If selected date is valid (past or today)\r\n      this.startDateErrorMessage = ''; // Clear error message\r\n      this.isValidStartDate = true;\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lvbi9yZWdpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"regionForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Region' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Region' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <!-- Name Field with Validation  -->\\r\\n             <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'State' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter state' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.state\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.state }}</span>\\r\\n            </div>\\r\\n                 \\r\\n                    \\r\\n            <!-- Name Field with Validation -->\\r\\n<!-- <div class=\\\"form-group pt-2\\\">\\r\\n  <label><b>{{ 'State' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n    </div>\\r\\n    <textarea name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\" rows=\\\"4\\\" \\r\\n      (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter state' | translate }}\\\" required></textarea>\\r\\n  </div>\\r\\n  <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n  <span *ngIf=\\\"form.inputerror?.state\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.state }}</span>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n            \\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Price' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"price\\\" [(ngModel)]=\\\"form.data.price\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessagePrice', 10, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter price' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessagePrice\\\" class=\\\"alertRedColor\\\">{{ errorMessagePrice }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.price\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.price }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Latitude' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"latitude\\\" [(ngModel)]=\\\"form.data.latitude\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"validateDouble($event)\\\" maxlength=\\\"9\\\"\\r\\n                  placeholder=\\\"{{ 'Enter latitude' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageDouble\\\" class=\\\"alertRedColor\\\">{{ errorMessageDouble }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.latitude\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.latitude }}</span>\\r\\n            </div>\\r\\n            \\r\\n\\r\\n            \\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Region' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"region\\\" [(ngModel)]=\\\"form.data.region\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select region' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let leve of form.preload.regionList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.region\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.region }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/regionlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-region',\r\n  templateUrl: './region.component.html',\r\n  styleUrls: ['./region.component.css']\r\n})\r\nexport class RegionComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n  errorMessageDouble: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.REGION, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.state);\r\n    flag = flag && validator.isNotNullObject(form.region);\r\n    flag = flag && validator.isNotNullObject(form.price);\r\n    flag = flag && validator.isNotNullObject(form.latitude);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.latitude = data.latitude;\r\n    form.price = data.price;\r\n    form.region = data.region;\r\n    form.state = data.state;\r\n  }\r\n\r\n  // validateName(event: KeyboardEvent): void {\r\n  //   const inputValue = (event.target as HTMLInputElement).value;\r\n  //   const inputChar = event.key;\r\n  //   const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n  //   if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n  //     event.preventDefault();\r\n  //     this.errorMessageName = 'Only alphabets are allowed.';\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (inputValue.length < 1) {\r\n  //     this.errorMessageName = 'Name must be at least  characters long.';\r\n  //   } else if (inputValue.length > 15) {\r\n  //     this.errorMessageName = 'Name must not exceed 15 characters.';\r\n  //   } else {\r\n  //     this.errorMessageName = '';  // Clear error message if valid\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n  \r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n  \r\n    if (inputValue.length > 15) {\r\n      this.errorMessageName = 'State must not exceed 15 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n\r\n\r\n  validateDouble(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    \r\n    // Regex to match numbers with at most one decimal point\r\n    const doublePattern = /^[0-9]*\\.?[0-9]*$/;\r\n  \r\n    // Prevent multiple decimal points\r\n    if (inputChar === '.' && inputValue.includes('.')) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Only one decimal point is allowed.';\r\n      return;\r\n    }\r\n  \r\n    // Allow digits and one decimal point\r\n    if (!doublePattern.test(inputValue + inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Only numeric values with one decimal point are allowed.';\r\n      return;\r\n    }\r\n  \r\n    // Check if input exceeds max length (8 characters)\r\n    if (inputValue.length >= 8 && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Input cannot exceed 8 characters.';\r\n      return;\r\n    }\r\n  \r\n    // Clear error message if valid\r\n    this.errorMessageDouble = '';\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    if(this.errorMessageDouble){\r\n      return false;\r\n    }\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lvbi9yZWdpb25saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Region List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.state\\\"\\r\\n            placeholder=\\\"{{ 'Search  state' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        \\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.latitude\\\"\\r\\n            placeholder=\\\"{{ 'Search latitude' | translate }}\\\" (input)=\\\"validateDouble($event)\\\">\\r\\n          <div *ngIf=\\\"!validateDouble\\\" class=\\\"text-danger\\\">{{ errorMessageDouble }}</div>\\r\\n        </div>\\r\\n         -->\\r\\n\\r\\n\\r\\n        \\r\\n         <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"latitude\\\" [(ngModel)]=\\\"form.searchParams.latitude\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"validateDouble($event)\\\" maxlength=\\\"9\\\"\\r\\n            placeholder=\\\"{{ 'Search latitude' | translate }}\\\" required>\\r\\n        \\r\\n          <!-- Display error message below input field -->\\r\\n          <div *ngIf=\\\"errorMessageDouble\\\" class=\\\"alertRedColor mt-2\\\">\\r\\n            {{ errorMessageDouble }}\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"price\\\" [(ngModel)]=\\\"form.searchParams.price\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessagePrice', 8, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter price' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessagePrice\\\" class=\\\"alertRedColor\\\">{{ errorMessagePrice }}</span>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" (change)=\\\"validateDate($event)\\\">\\r\\n          <div *ngIf=\\\"!isValidStartDate\\\" class=\\\"text-danger\\\">\\r\\n            {{ startDateErrorMessage }}\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"region\\\" [(ngModel)]=\\\"form.searchParams.region\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select region' | translate }}</option>\\r\\n            <option *ngFor=\\\"let leve of form.preload.regionList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/region')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add Region' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'State' | translate }}</th>\\r\\n              <th>{{ 'Price' | translate }}</th>\\r\\n              <th>{{ 'Latitude' | translate }}</th>\\r\\n              <th>{{ 'Region' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.state }}</td>\\r\\n              <td>{{ m.price  }}</td>\\r\\n              <td>{{ m.latitude }}</td>\\r\\n              <td>{{ findSelValueByKey(m.region,form.preload.regionList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/region/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/regionlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/regionlist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-regionlist',\r\n  templateUrl: './regionlist.component.html',\r\n  styleUrls: ['./regionlist.component.css']\r\n})\r\nexport class RegionlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  isValidStartDate: boolean = true;\r\n  startDateErrorMessage: string = '';\r\n  errorMessageDouble: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n\r\n    super(locator.endpoints.REGION, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string): void {\r\n    const value = event.target.value;\r\n\r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        // Replace non-alphabetic characters\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); \r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n        this.isValidNameInput = false;\r\n      } \r\n      // Restrict input to a maximum length of 15 characters\r\n      else if (value.length > 15) {\r\n        // Trim the input to 15 characters\r\n        event.target.value = value.substring(0, 15); \r\n        this.nameErrorMessage = 'State cannot exceed 15 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // Clear error message if input is valid\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n  validateDouble(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    \r\n    // Regex to match numbers with at most one decimal point\r\n    const doublePattern = /^[0-9]*\\.?[0-9]*$/;\r\n  \r\n    // Prevent multiple decimal points\r\n    if (inputChar === '.' && inputValue.includes('.')) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Only one decimal point is allowed.';\r\n      return;\r\n    }\r\n  \r\n    // Allow digits and one decimal point\r\n    if (!doublePattern.test(inputValue + inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Only numeric values with one decimal point are allowed.';\r\n      return;\r\n    }\r\n  \r\n    // Check if input exceeds max length (8 characters)\r\n    if (inputValue.length >= 8 && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageDouble = 'Input cannot exceed 8 characters.';\r\n      return;\r\n    }\r\n  \r\n    // Clear error message if valid\r\n    this.errorMessageDouble = '';\r\n  }\r\n  \r\n  \r\n\r\n  validateDate(event: any) {\r\n    const selectedDate = new Date(event.target.value);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set today's time to midnight to compare only the date\r\n\r\n    if (selectedDate > today) {\r\n      // If selected date is in the future\r\n      this.startDateErrorMessage = 'Please enter a past date';\r\n      this.isValidStartDate = false;\r\n    } else {\r\n      // If selected date is valid (past or today)\r\n      this.startDateErrorMessage = ''; // Clear error message\r\n      this.isValidStartDate = true;\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\r\\n background: url(assets/files/back1.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n            <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n                \\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <h1 class=\\\"text-primary font-weight-bold\\\">{{'Role List' | translate}}</h1>\\r\\n                  </div>\\r\\n                </div>\\r\\n          \\r\\n                <div class=\\\"row p-1\\\">\\r\\n                  <div class=\\\"col-sm-1\\\"></div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n                      placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n                  </div> -->\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n                      placeholder=\\\"{{'Search Description' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                    <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n                      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                      <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n          \\r\\n                  \\r\\n                 \\r\\n                  <div class=\\\"col-sm-1 ml-3\\\">\\r\\n                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n                      {{'Search' | translate }}</button>\\r\\n                  </div>\\r\\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                  <div class=\\\"col-lg-2 ml-4\\\">\\r\\n                    <button (click)=\\\"forward('/role')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Role' | translate}}\\r\\n                    </button>\\r\\n                  </div>\\r\\n          \\r\\n                  <div class=\\\"col-sm-1\\\">\\r\\n                    <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n                      {{'Delete'| translate}}</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n\\r\\n          \\r\\n\\r\\n            <div class=\\\"p-1\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\r\\n                        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                            <tr>\\r\\n                                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                                <th>{{'S.No' | translate }}</th>\\r\\n                                <th>{{'Name' | translate }}</th>\\r\\n                                <th>{{'Description' | translate }}</th>\\r\\n                                <th>{{'Edit' | translate}}</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                                </td>\\r\\n                                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                                <td> {{ m.name }} </td>\\r\\n                                <td> {{ m.description }} </td>\\r\\n                                <td>\\r\\n                                    <a (click)=\\\"forward( '/role/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                                    </a>\\r\\n                                    <!-- /\\r\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                                    </a> -->\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div><table style=\\\"width: 100%;\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"width: 50%;\\\">\\r\\n                  <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                    }} </button></td>\\r\\n                    <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                    <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\r\\n                      <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/rolelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n        \\r\\n          \\r\\n          \\r\\n                \\r\\n                    <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                      translate }}</button></td>\\r\\n                    </tr>\\r\\n                    </table>\\r\\n              \\r\\n                    \\r\\n               \\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-role-list',\r\n    templateUrl: './role-list.component.html',\r\n    styleUrls: ['./role.component.css']\r\n  })\r\n\r\n\r\n  export class RoleListComponent extends BaseListCtl {\r\n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n      super(locator.endpoints.ROLE, locator, route);\r\n    }\r\n  \r\n  }","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS9yb2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\r\\n        rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Role' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Role' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Role Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/rolelist')\\\" class=\\\"btn btn-md btn-warning\\\">\\r\\n                {{'List' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-role',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.css']\r\n})\r\n\r\nexport class RoleComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.ROLE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.description = data.description;\r\n    form.status = data.status;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EndpointServiceService } from './endpoint-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServiceLocatorService {\r\n\r\n  \r\n  httpService = null;\r\n  dataValidator = null;\r\n  router = null;\r\n  endpoints = null;\r\n\r\n  constructor(private hs: HttpServiceService, private dv: DataValidator, private r: Router, private ep: EndpointServiceService) {\r\n    this.httpService = hs;\r\n    this.dataValidator = dv;\r\n    this.router = r;\r\n    this.endpoints = ep;\r\n  }\r\n \r\n  /**\r\n   * get path variable from url\r\n   * \r\n   * @param route \r\n   * @param callback \r\n   */\r\n  getPathVariable(route: ActivatedRoute, callback) {\r\n    route.params.subscribe(params => {\r\n      callback(params)\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Forward to page \r\n   * \r\n   * @param page \r\n   */\r\n  forward(page){\r\n    this.router.navigateByUrl(page);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  spinner works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrYW5hbHlzaXMvc3RvY2thbmFseXNpcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"stockanalysisForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add Stock Analysis' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update Stock Analysis' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Stock Symbol' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"stockSymbol\\\" [(ngModel)]=\\\"form.data.stockSymbol\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageStockSymbol', 5, '')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Stock Symbol' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageStockSymbol\\\" class=\\\"alertRedColor\\\">{{ errorMessageStockSymbol }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.stockSymbol\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.stockSymbol }}</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"form.inputerror?.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'End Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"endDate\\\" [value]=\\\"form.data.endDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                (input)=\\\"form.data.endDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter End Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              \\r\\n              <span *ngIf=\\\"form.inputerror?.endDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.endDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Analysis Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"analysisType\\\" [(ngModel)]=\\\"form.data.analysisType\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Analysis Type' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let color of form.preload.analysisList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.analysisType\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.analysisType }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n  \\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n            \\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/stockanalysislist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-stockanalysis',\r\n  templateUrl: './stockanalysis.component.html',\r\n  styleUrls: ['./stockanalysis.component.css']\r\n})\r\nexport class StockanalysisComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STOCKANALYSIS, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.stockSymbol);\r\n    flag = flag && validator.isNotNullObject(form.analysisType);\r\n    flag = flag && validator.isNotNullObject(form.startDate);\r\n    flag = flag && validator.isNotNullObject(form.endDate);\r\n\r\n    return flag;\r\n  }\r\n \r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.stockSymbol = data.stockSymbol;\r\n    form.analysisType = data.analysisType;\r\n    form.startDate = data.startDate;\r\n    form.endDate = data.endDate;\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrYW5hbHlzaXMvc3RvY2thbmFseXNpc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Stock Analysis List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"stockSymbol\\\" [(ngModel)]=\\\"form.searchParams.stockSymbol\\\" class=\\\"form-control\\\"\\r\\n          (keydown)=\\\"filterInput($event, 'errorMessageStockSymbol', 5, '')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Stock Symbol' | translate }}\\\">\\r\\n            <span *ngIf=\\\"errorMessageStockSymbol\\\" class=\\\"alertRedColor\\\">{{ errorMessageStockSymbol }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"form.searchParams.endDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter End Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"analysisType\\\" [(ngModel)]=\\\"form.searchParams.analysisType\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select Analysis Type' | translate }}</option>\\r\\n            <option *ngFor=\\\"let color of form.preload.analysisList\\\" [value]=\\\"color.key\\\">{{ color.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/stockanalysis')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add stock Analysis' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Stock Symbol' | translate }}</th>\\r\\n              <th>{{ 'Start Date' | translate }}</th>\\r\\n              <th>{{ 'End Date' | translate }}</th>\\r\\n              <th>{{ 'Analysis Type' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.stockSymbol }}</td>\\r\\n              <td>{{ m.startDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.endDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ findSelValueByKey(m.analysisType,form.preload.analysisList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/stockanalysis/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/stockanalysislist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/stockanalysislist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-stockanalysislist',\r\n  templateUrl: './stockanalysislist.component.html',\r\n  styleUrls: ['./stockanalysislist.component.css']\r\n})\r\nexport class StockanalysislistComponent extends BaseListCtl implements OnInit  {\r\n\r\n  myKey = \"\";\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {},\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.STOCKANALYSIS, locator, route);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'Student List' | translate }}</h2>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.enrolNo\\\"\\r\\n            placeholder=\\\"{{'Search Enrollment' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.email\\\"\\r\\n            placeholder=\\\"{{'Search Email' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\"\\r\\n            placeholder=\\\"{{'Search Mobile Number' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n          <button (click)=\\\"forward('/student')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Student' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate }}</th>\\r\\n                <th>{{'Enrollment No' | translate }}</th>\\r\\n                <th>{{'First Name' | translate }}</th>\\r\\n                <th>{{'Last Name' | translate }}</th>\\r\\n                <th>{{'College' | translate }}</th>\\r\\n                <th>{{'DOB' | translate }}</th>\\r\\n                <th>{{'Mobile' | translate }}</th>\\r\\n                <th>{{'Email' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{m.enrolNo}}</td>\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.collegeName }} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}}</td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.email }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/student/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n              <tr> <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' |\\r\\n                    translate }} </button>\\r\\n                </td>  \\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/studentlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n                <td>\\r\\n                  <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }} </button>\\r\\n                 </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-student-list',\r\n  templateUrl: './student-list.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\n\r\nexport class StudentListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; \\r\\npadding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Student' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Student' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Enrollment No' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"enrolNo\\\" [(ngModel)]=\\\"form.data.enrolNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Enrollment Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.enrolNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstN\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastN\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select College' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.collegeId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"  ><b>{{'Mobile No' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\" ></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" maxlength=\\\"10\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/studentlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent extends BaseCtl {\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.enrolNo);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.collegeId = data.collegeId;\r\n    console.log(form.collegeId + \" inside populateForm method\");\r\n\r\n    form.email = data.email;\r\n    form.enrolNo = data.enrolNo;\r\n    form.dob = data.dob;\r\n\r\n    //let ndate = new Date(data.dob);\r\n   \r\n    //console.log(form.dob + 'date ------',ndate)\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.phoneNo = data.phoneNo;\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Subject List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/subject')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Subject' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n               \\r\\n                <th>{{'Description' | translate}}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.subjectName}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n               \\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/subject/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/subjectlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n                \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.SUBJECT, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:13%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Subject' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Subject' | translate}}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subjectName\\\" [(ngModel)]=\\\"form.data.subjectName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Subject Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate}}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/subjectlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-subject',\r\n  templateUrl: './subject.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.SUBJECT, locator, route);\r\n\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.subjectName);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectName = data.subjectName;\r\n    form.description = data.description;\r\n    form.courseId = data.courseId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'TimeTable List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/timetable')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add TimeTable' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Semester' | translate }}</th>\\r\\n                <th>{{'ExamDate' | translate }}</th>\\r\\n                <th>{{'ExamTime' | translate }}</th>\\r\\n                <th>{{'Course' | translate }}</th>\\r\\n                <th>{{'Subject' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              \\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index;\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.semester }} </td>\\r\\n                <td> {{ m.examDate | date : 'dd-MM-yyyy' }} </td>\\r\\n                <td> {{ m.examTime }} </td>\\r\\n                <td> {{ m.courseName }} </td>\\r\\n                <td> {{ m.subjectName }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/timetable/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                    </a>\\r\\n                  </td> -->\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/timetablelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n              \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-timetable-list',\r\n  templateUrl: './timetable-list.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\nexport class TimetableListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.TIMETABLE, locator, route);\r\n    let ppSize= 0;\r\n  }\r\n  \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add TimeTable' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update TimeTable' | translate }}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Course' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          \\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-globe grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Subject' | translate }}</option>\\r\\n            \\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Semester' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"semester\\\" [(ngModel)]=\\\"form.data.semester\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"> {{'Please select' | translate}} </option>\\r\\n                  <option value=\\\"1 Semester\\\">1 Semester</option>\\r\\n                  <option value=\\\"2 Semester\\\">2 Semester</option>\\r\\n                  <option value=\\\"3 Semester\\\">3 Semester</option>\\r\\n                  <option value=\\\"4 Semester\\\">4 Semester</option>\\r\\n                  <option value=\\\"5 Semester\\\">5 Semester</option>\\r\\n                  <option value=\\\"6 Semester\\\">6 Semester</option>\\r\\n                  <option value=\\\"7 Semester\\\">7 Semester</option>\\r\\n                  <option value=\\\"8 Semester\\\">8 Semester</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.semester}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Date' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"examDate\\\" [value]=\\\"form.data.examDate | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.examDate=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examDate}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Time' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"examTime\\\" [(ngModel)]=\\\"form.data.examTime\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select examTime' | translate }}</option>\\r\\n            \\r\\n                  <option selected disabled>{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"08:00 AM to 11:00 AM\\\">08:00 AM to 11:00 AM</option>\\r\\n                  <option value=\\\"12:00PM to 3:00PM\\\">12:00PM to 3:00PM</option>\\r\\n                  <option value=\\\"3:00PM to 6:00PM\\\">3:00PM to 6:00PM</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examTime}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea  name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\"  (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button  *ngIf=\\\"form.data.id>0\\\"  (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n              {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n           \\r\\n           \\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/timetablelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-timetable',\r\n  templateUrl: './timetable.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\n\r\n\r\nexport class TimetableComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.TIMETABLE, locator, route);\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.semester);\r\n    flag = flag && validator.isNotNullObject(form.examDate);\r\n    console.log(form.examDate);\r\n    flag = flag && validator.isNotNullObject(form.examTime);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    \r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseId = data.courseId;\r\n    form.subjectId = data.subjectId;\r\n    form.semester = data.semester;\r\n    form.examDate = data.examDate;\r\n    form.examTime = data.examTime;\r\n    form.description = data.description;\r\n\r\n    console.log('Populated Form', form);\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n.grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom: 5%;\\r\\n background: url(assets/files/wall.jpg);\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover; width:auto;\\r\\n    height: auto;\\\">\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2  class=\\\"text-primary font-weight-bold\\\">{{'Change Password' | translate }}</h2>\\r\\n    \\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Old Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Old Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n        \\r\\n        <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'New Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock-alt grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"form.data.newPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Enter New Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>Confirm Password</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Confirm Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.confirmPassword}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button   (click)=\\\"changePassword()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n               {{'Update' | translate}} </button>\\r\\n            </div>\\r\\n            <input type=\\\"hidden\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\">\\r\\n            \\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\nimport {HttpServiceService } from '../http-service.service';\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class ChangepasswordComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, public httpService : HttpServiceService) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null, loginId : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n  };\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.oldPassword);\r\n    flag = flag && validator.isNotNullObject(form.newPassword);\r\n    flag = flag && validator.isNotNullObject(form.confirmPassword);\r\n    return flag;\r\n  }\r\n\r\n  changePassword(){\r\n   var _self = this;\r\n   this.form.data.loginId = localStorage.getItem(\"loginId\")\r\n    this.httpService.post(\"http://localhost:8084/User/changepassword\",this.form.data,function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.data;\r\n        _self.form.message = res.result.message;\r\n      }\r\n         });\r\n  }\r\n  }\r\n  \r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; \\r\\nbackground: url(assets/files/edc.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form name=\\\"myProfile\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'My Profile'  | translate }}</h2>\\r\\n         \\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          \\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male'  | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\"\\r\\n                  (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" readonly>\\r\\n\\r\\n                  <option value=\\\"Active\\\">{{'Active'  | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            \\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-myprofile',\r\n  templateUrl: './myprofile.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class MyprofileComponent extends BaseCtl{\r\n constructor(public locator: ServiceLocatorService, public route: ActivatedRoute,private httpClient: HttpClient) {\r\n  super(locator.endpoints.USER, locator, route);\r\n  }\r\nngOnInit(){\r\n \r\n}\r\n  \r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"\\r\\nbackground: url(assets/files/163999.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.firstName\\\"\\r\\n            placeholder=\\\"{{'Search First Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n          <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\"\\r\\n            placeholder=\\\"{{'Search dob' | translate}}\\\">\\r\\n\\r\\n        </div>   -->\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/user')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-hover  font-weight-bold  text-blac\\\" style=\\\"font-size: large;\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Image' | translate}}</th>\\r\\n                <th>{{'First Name' | translate}}</th>\\r\\n                <th>{{'Last Name' | translate}}</th>\\r\\n                <th>{{'Login' | translate}}</th>\\r\\n                <th>{{'Status' | translate}}</th>\\r\\n                <th>{{'Role' | translate}}</th>\\r\\n                <th>{{'Phone' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" [disabled]=\\\"m.roleName=='Admin'\\\"\\r\\n                    name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n\\r\\n\\r\\n\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"m.imageId\\\">\\r\\n                    <img src=\\\"http://localhost:8084/User/profilePic/{{m.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!m.imageId\\\">\\r\\n                    <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.loginId }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td> {{ m.roleName }} </td>\\r\\n                <td> {{ m.phone }} </td>\\r\\n                <td> {{ m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n\\r\\n                  <button class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\"\\r\\n                    (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\"></button>\\r\\n                  <!-- <a (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\r\\n                    cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-primary\\\"></i>\\r\\n                  </a> -->\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger \\\"></i>\\r\\n                  </a> -->\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' |\\r\\n                  translate\\r\\n                  }} </button>\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n              <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\r\\n                  [routerLink]=\\\"['/userlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n\\r\\n              <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\ncreateImageFromBlob(image: Blob) {\r\n   let reader = new FileReader();\r\n   reader.addEventListener(\"load\", () => {\r\n      this.imageToShow = reader.result;\r\n   \r\n   }, false);\r\n\r\n   if (image) {\r\n      reader.readAsDataURL(image);\r\n   }\r\n}\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null}, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [ ], // search list \r\n    pageNo: 0\r\n  };\r\n\r\n\r\n\r\n  selectedFile: File;\r\n  retrievedImage: any;\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n  imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8084/User/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n ","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.file-btn{\\r\\n    border: black;\\r\\n}\\r\\n\\r\\n\\r\\n.third {\\r\\n    border-color: #b300b3;\\r\\n    color: #695d29;\\r\\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\\r\\n    transition: all 150ms ease-in-out;\\r\\n  }\\r\\n\\r\\n\\r\\n.third:hover {\\r\\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn {\\r\\n    box-sizing: border-box;\\r\\n    -webkit-appearance: none;\\r\\n       -moz-appearance: none;\\r\\n            appearance: none;\\r\\n    background-color: transparent;\\r\\n    border: 2px solid #e74c3c;\\r\\n    border-radius: 0.6em;\\r\\n    color: #e74c3c;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    align-self: center;\\r\\n    font-size: 1rem;\\r\\n    font-weight: 400;\\r\\n    line-height: 1;\\r\\n    margin: 20px;\\r\\n    padding: 1.2em 2.8em;\\r\\n    text-decoration: none;\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    font-weight: 700;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn:hover, .filebtn:focus {\\r\\n    color: #ffffff;\\r\\n    outline: 0;\\r\\n  }\\r\\n  \\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCOzs7QUFDQTtJQUNJLGFBQWE7QUFDakI7OztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCx3REFBd0Q7SUFFeEQsaUNBQWlDO0VBQ25DOzs7QUFDQTtJQUNFLDBEQUEwRDtFQUM1RDs7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsd0JBQXdCO09BQ3JCLHFCQUFxQjtZQUNoQixnQkFBZ0I7SUFDeEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGVBQWU7SUFJZixhQUFhO0lBR0wsa0JBQWtCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUNBQXFDO0lBQ3JDLGdCQUFnQjtFQUNsQjs7O0FBQ0E7SUFDRSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4uZmlsZS1idG57XHJcbiAgICBib3JkZXI6IGJsYWNrO1xyXG59XHJcblxyXG4udGhpcmQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYjMwMGIzO1xyXG4gICAgY29sb3I6ICM2OTVkMjk7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgNDBweCA0MHB4ICMzNDk4ZGIgaW5zZXQsIDAgMCAwIDAgIzM0OThkYjtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gIH1cclxuICAudGhpcmQ6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMCAjMzQ5OGRiIGluc2V0LCAwIDAgMTBweCA0cHggIzM0OThkYjtcclxuICB9XHJcbiAgLmZpbGVidG4ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2U3NGMzYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNmVtO1xyXG4gICAgY29sb3I6ICNlNzRjM2M7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgIC1tcy1mbGV4LWl0ZW0tYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMS4yZW0gMi44ZW07XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG4gIC5maWxlYnRuOmhvdmVyLCAuZmlsZWJ0bjpmb2N1cyB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG4gIFxyXG5cclxuIl19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 2%; padding-bottom:2%;\\r\\n\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:100%;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad \\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add User' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update User' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n\\r\\n            \\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Role Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.data.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.roleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'role'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.roleId}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.firstName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.lastName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.loginId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'email'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.loginId}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.phone != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'phone'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.alternateMobile != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'mobile'| translate}} </span></div>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.alternateMobile}} </span> -->\\r\\n\\r\\n\\r\\n            <div>\\r\\n         \\r\\n             <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n<span *ngIf=\\\"form.inputerror.dob != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'dob'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.gender != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'gender'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image' | translate }}</b>\\r\\n              <!-- <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"></option> -->\\r\\n              <span *ngIf=\\\"!form.data.imageId\\\" class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div *ngIf=\\\"form.data.imageId\\\">\\r\\n                <img src=\\\"http://localhost:8084/User/profilePic/{{form.data.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.data.imageId\\\">\\r\\n                <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-picture-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\" (change)=\\\"onFileSelect($event.target.files)\\\"\\r\\n                  accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n              \\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bell grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\r\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'status'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userlist']\\\"\\r\\n                  style=\\\"text-decoration: none; color: white;\\\">{{'List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      //_self.form.data.id=0;\r\n      console.log(\"form data going to be submit\" , res.result.data);\r\n      //_self.form.data.id = res.result.data;\r\n      if (_self.fileToUpload) {\r\n        console.log('Suraj');\r\n        _self.myFile();\r\n      }\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n      if (_self.form.data.id && _self.form.data.id > 0) {\r\n        _self.form.data.id = res.result.data;\r\n      } else {\r\n        _self.form.data.id = 0;\r\n      }\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Suraj----------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n        //_self.form.data.id = res.result.data.id;\r\n      }\r\n     \r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  // submit1() {\r\n  //   var _self = this;\r\n  //   console.log(this.form + \"submit running start\");\r\n  //   console.log(this.form.data + \"form data going to be submit\");\r\n  //   this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n  //     _self.form.message = '';\r\n  //     _self.form.inputerror = {};\r\n  //     _self.form.data.id = res.result.data;\r\n  //     _self.myFile();\r\n  //     if (res.success) {\r\n  //       _self.form.message = \"Data is saved\";\r\n  //       _self.form.data.id = res.result.data;\r\n\r\n  //       console.log(_self.form.data.id);\r\n  //       console.log(\"--------------------.\");\r\n\r\n  //     } else {\r\n  //       _self.form.error = true;\r\n  //       _self.form.inputerror = res.result.inputerror;\r\n  //       _self.form.message = res.result.message;\r\n  //     }\r\n  //     _self.form.data.id = res.result.data;\r\n  //     console.log('FORM', _self.form);\r\n  //   });\r\n  // }\r\n\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  myFile() {\r\n    console.log(this.form.data.id + 'after super.submit-----');\r\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\r\n\r\n      console.log(this.fileToUpload);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\r\n    const formData = new FormData();\r\n    let phone = null;\r\n    formData.append('file', fileToUpload);\r\n    console.log(this.form.data.id + 'this id number ======');\r\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.roleId);\r\n    console.log(form.roleId);\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.loginId);\r\n    console.log(form.loginId);\r\n    flag = flag && validator.isNotNullObject(form.password);\r\n    console.log(form.password);\r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    console.log(form.phone);\r\n    flag = flag && validator.isNotNullObject(form.alternateMobile);\r\n    console.log(form.alternateMobile);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    console.log(form.dob);\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender + 'gender--');\r\n    flag = flag && validator.isNotNullObject(form.status);\r\n    console.log(form.status + 'status---');\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in usercomponent');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.loginId = data.loginId;\r\n    form.password = data.password;\r\n    form.gender = data.gender;\r\n    console.log(form.gender + 'gender--');\r\n    form.alternateMobile = data.alternateMobile;\r\n    form.phone = data.phone;\r\n    console.log(form.phone);\r\n    form.dob = data.dob;\r\n    form.roleId = data.roleId;\r\n    form.status = data.status;\r\n    form.imageId = data.imageId;\r\n    console.log(form.status + 'status---');\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataValidator {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  trim(valueToWhite: string) {\r\n    return valueToWhite.replace(/\\s/g, \"\");\r\n  }\r\n  /**\r\n   * Check is string is not empty\r\n   * @param val \r\n   */\r\n  isNotNull(val: string) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        val = this.trim(val);\r\n        flag = val.length > 0;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n * Is string is empty\r\n * @param val\r\n */\r\n  isNull(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n  /**\r\n   * Is not null object\r\n   */\r\n  isNotNullObject(val: any) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        flag = true;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Is null object\r\n   */\r\n  isNullObject(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n\r\n  isTrue(val: boolean) {\r\n    let flag = true;\r\n    if (val) {\r\n      flag = true;\r\n    } else {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param val Convets string into number\r\n   */\r\n  toInt(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseInt(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  toFloat(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseFloat(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  /**\r\n   * Create clone pobject\r\n   * \r\n   * @param obj \r\n   */\r\n  getClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3h5ei94eXouY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .background {\\r\\n    padding-top: 3%;\\r\\n    padding-bottom: 13%;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid background\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body shadow-lg grad\\\">\\r\\n          <form name=\\\"xyzForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Add XYZ' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">\\r\\n              {{ 'Update XYZ' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <!-- Form error messages -->\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <!-- Name Field with Validation -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\" maxlength=\\\"51\\\"\\r\\n                  (keydown)=\\\"validateName($event)\\\" placeholder=\\\"{{ 'Enter description' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.description\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.description }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Amount Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-badge grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\"\\r\\n                  (keydown)=\\\"filterInput($event, 'errorMessageAmount', 8, 'int')\\\"\\r\\n                  placeholder=\\\"{{ 'Enter amount' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n              <span *ngIf=\\\"form.inputerror?.amount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.amount }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Start Date Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Added Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"addedDate\\\" [value]=\\\"form.data.addedDate | date:'yyyy-MM-dd'\\\" class=\\\"form-control\\\"\\r\\n                  (input)=\\\"form.data.addedDate=parseDate($event.target.value)\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Added Date' | translate }}\\\" required>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.addedDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.addedDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <!-- Analysis Type Field -->\\r\\n            <div class=\\\"form-group pt-2\\\">\\r\\n              <label><b>{{ 'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-paint-brush grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"product\\\" [(ngModel)]=\\\"form.data.product\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select product' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let leve of form.preload.productList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror?.product\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.product }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n              <div class=\\\"col-md-3\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Save' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                  {{ 'Update' | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"pt-2\\\">\\r\\n                <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/xyzlist']\\\"\\r\\n                   style=\\\"text-decoration: none; color: white;\\\">\\r\\n                  {{ 'List' | translate }}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-xyz',\r\n  templateUrl: './xyz.component.html',\r\n  styleUrls: ['./xyz.component.css']\r\n})\r\nexport class XyzComponent extends BaseCtl {\r\n  errorMessageTitle: string = '';\r\n  errorMessageName: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.XYZ, locator, route);\r\n  }\r\n\r\n  validateForm(form): boolean {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.product);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    flag = flag && validator.isNotNullObject(form.addedDate);\r\n    flag = flag && validator.isNotNullObject(form.amount);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.addedDate = data.addedDate;\r\n    form.description = data.description;\r\n    form.product = data.product;\r\n    form.amount = data.amount;\r\n  }\r\n\r\n  // validateName(event: KeyboardEvent): void {\r\n  //   const inputValue = (event.target as HTMLInputElement).value;\r\n  //   const inputChar = event.key;\r\n  //   const alphabetPattern = /^[a-zA-Z]*$/;  // Pattern to match only alphabetic characters\r\n\r\n  //   if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n  //     event.preventDefault();\r\n  //     this.errorMessageName = 'Only alphabets are allowed.';\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (inputValue.length < 1) {\r\n  //     this.errorMessageName = 'Name must be at least  characters long.';\r\n  //   } else if (inputValue.length > 15) {\r\n  //     this.errorMessageName = 'Name must not exceed 15 characters.';\r\n  //   } else {\r\n  //     this.errorMessageName = '';  // Clear error message if valid\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateName(event: KeyboardEvent): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    const inputChar = event.key;\r\n    const alphabetPattern = /^[a-zA-Z\\s]*$/;\r\n  \r\n    if (!alphabetPattern.test(inputChar) && !['Backspace', 'Delete', 'Tab'].includes(inputChar)) {\r\n      event.preventDefault();\r\n      this.errorMessageName = 'Only alphabets are allowed.';\r\n      return;\r\n    }\r\n  \r\n    if (inputValue.length > 50) {\r\n      this.errorMessageName = 'Description must not exceed 50 characters.';\r\n    } else {\r\n      this.errorMessageName = '';  // Clear error message if valid\r\n    }\r\n  }\r\n  \r\n\r\n  // New method to validate before saving\r\n  validateBeforeSave(): boolean {\r\n    if (this.errorMessageName) {\r\n      // If there's any error message, don't proceed with saving\r\n      return false;\r\n    }\r\n\r\n    // Add other field validations if needed\r\n\r\n    // Validate form data\r\n    if (!this.validateForm(this.form.data)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Save method that checks validation\r\n  saveForm(): void {\r\n    if (this.validateBeforeSave()) {\r\n      console.log('Form data is valid. Saving data...');\r\n      // Perform the actual save operation\r\n    } else {\r\n      console.log('Validation failed. Form not saved.');\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3h5ei94eXpsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url('assets/files/teahu.png') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .col-sm-2,\\r\\n  .search-inputs .col-sm-1 {\\r\\n    padding: 0 5px;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'XYZ List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search  description' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.searchParams.amount\\\" class=\\\"form-control\\\"\\r\\n            (keydown)=\\\"filterInput($event, 'errorMessageAmount', 8, 'int')\\\"\\r\\n            placeholder=\\\"{{ 'Enter Amount' | translate }}\\\">\\r\\n          <span *ngIf=\\\"errorMessageAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageAmount }}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"addedDate\\\" [(ngModel)]=\\\"form.searchParams.addedDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Added Date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{ 'Enter Start Date' | translate }}\\\" (change)=\\\"validateDate($event)\\\">\\r\\n          <div *ngIf=\\\"!isValidStartDate\\\" class=\\\"text-danger\\\">\\r\\n            {{ startDateErrorMessage }}\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"product\\\" [(ngModel)]=\\\"form.searchParams.product\\\" aria-label=\\\"ngSelected\\\" required>\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select product' | translate }}</option>\\r\\n            <option *ngFor=\\\"let leve of form.preload.productList\\\" [value]=\\\"leve.key\\\">{{ leve.value }}</option>\\r\\n          </select>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/xyz')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n            {{ 'Add xyz' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'Description' | translate }}</th>\\r\\n              <th>{{ 'Added Date' | translate }}</th>\\r\\n              <th>{{ 'Amount' | translate }}</th>\\r\\n              <th>{{ 'Product' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ m.addedDate | date:'yyyy-MM-dd' }}</td>\\r\\n              <td>{{ m.amount }}</td>\\r\\n              <td>{{ findSelValueByKey(m.product,form.preload.productList) }}</td>\\r\\n\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/xyz/' + m.id)\\\">\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n\\r\\n          <div>\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/portfoliolist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Reset' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/portfoliolist']\\\" (click)=\\\"exit()\\\">\\r\\n              {{ 'Back' | translate }}\\r\\n            </a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-xyzlist',\r\n  templateUrl: './xyzlist.component.html',\r\n  styleUrls: ['./xyzlist.component.css']\r\n})\r\nexport class XyzlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  isValidStartDate: boolean = true;\r\n  startDateErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n\r\n    super(locator.endpoints.XYZ, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  \r\n\r\n  validateInput(event: any, field: string): void {\r\n    const value = event.target.value;\r\n\r\n    // For the \"name\" field validation\r\n    if (field === 'name') {\r\n      // Restrict input to alphabets and spaces only\r\n      if (/[^A-Za-z\\s]/.test(value)) {\r\n        // Replace non-alphabetic characters\r\n        event.target.value = value.replace(/[^A-Za-z\\s]/g, ''); \r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n        this.isValidNameInput = false;\r\n      } \r\n      // Restrict input to a maximum length of 15 characters\r\n      else if (value.length > 15) {\r\n        // Trim the input to 15 characters\r\n        event.target.value = value.substring(0, 15); \r\n        this.nameErrorMessage = 'Description cannot exceed 15 characters';\r\n        this.isValidNameInput = false;\r\n      } else {\r\n        // Clear error message if input is valid\r\n        this.nameErrorMessage = '';\r\n        this.isValidNameInput = true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n\r\n  validateDate(event: any) {\r\n    const selectedDate = new Date(event.target.value);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set today's time to midnight to compare only the date\r\n\r\n    if (selectedDate > today) {\r\n      // If selected date is in the future\r\n      this.startDateErrorMessage = 'Please enter a past date';\r\n      this.isValidStartDate = false;\r\n    } else {\r\n      // If selected date is valid (past or today)\r\n      this.startDateErrorMessage = ''; // Clear error message\r\n      this.isValidStartDate = true;\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}